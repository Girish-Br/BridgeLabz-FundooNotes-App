{"ast":null,"code":"var _jsxFileName = \"/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/forgotpassword.jsx\";\n\n/****************************************************************************************\n *  @Purpose        : To create a forgot password page to recover the password\n                      using mail.\n *  @file           : forgotPassword.jsx       \n *  @author         : Girish B R\n *  @version        : v0.1\n *  @since          : 1-12-2019\n *****************************************************************************************/\nimport React from \"react\";\nimport { Card, Button, TextField, Snackbar, IconButton } from \"@material-ui/core\";\nimport { forgotpassword } from \"../controller/userController\";\nexport default class ForgotPwd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      //validating inputs\n      if (this.state.email === \"\") {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"email cannot be empty\"\n        });\n      } else if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.email)) {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"Invalid email..!\"\n        });\n      } else {\n        forgotpassword(this.state.email).then(data => {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: \"rest password link sent to your email\"\n          });\n        }).catch(error => {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: error\n          });\n        });\n        /*.then(res => {\n          if (res === 'success') {\n            this.setState({\n              snackbarOpen: true,\n              snackbarMsg: \"rest password link sent to your email\"\n            })\n          }\n          else {\n            this.setState({\n              snackbarOpen: true,\n              snackbarMsg: res\n            })\n          }\n        })*/\n      }\n    };\n\n    this.snackbarClose = e => {\n      this.setState({\n        snackbarOpen: false\n      });\n    };\n\n    this.onChangeEmail = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      snackbarOpen: false,\n      snackbarMsg: \"\"\n    };\n  } //function to handle when we click submit button\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"fcomp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Card, {\n      class: \"fCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"forgotpwd_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Enter Email\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: this.state.snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: this.snackbarClose,\n      message: React.createElement(\"span\", {\n        id: \"messege-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.snackbarMsg),\n      action: React.createElement(IconButton, {\n        key: \"close\",\n        \"arial-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.snackbarClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"fSubmitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      variant: \"contained\",\n      style: {\n        color: \"primary\",\n        backgroundColor: \"#3f51b5\",\n        fontcolor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/forgotpassword.jsx"],"names":["React","Card","Button","TextField","Snackbar","IconButton","forgotpassword","ForgotPwd","Component","constructor","props","handleClick","state","email","setState","snackbarOpen","snackbarMsg","test","then","data","catch","error","snackbarClose","e","onChangeEmail","target","name","value","render","vertical","horizontal","color","backgroundColor","fontcolor"],"mappings":"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","sourcesContent":["/****************************************************************************************\n *  @Purpose        : To create a forgot password page to recover the password\n                      using mail.\n *  @file           : forgotPassword.jsx       \n *  @author         : Girish B R\n *  @version        : v0.1\n *  @since          : 1-12-2019\n *****************************************************************************************/\nimport React from \"react\";\nimport {\n  Card,\n  Button,\n  TextField,\n  Snackbar,\n  IconButton\n} from \"@material-ui/core\";\nimport { forgotpassword } from \"../controller/userController\";\nexport default class ForgotPwd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      snackbarOpen: false,\n      snackbarMsg: \"\"\n    };\n  }\n  //function to handle when we click submit button\n  handleClick = () => {\n    //validating inputs\n    if (this.state.email === \"\") {\n      this.setState({\n        snackbarOpen: true,\n        snackbarMsg: \"email cannot be empty\"\n      });\n    } else if (\n      !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.email)\n    ) {\n      this.setState({\n        snackbarOpen: true,\n        snackbarMsg: \"Invalid email..!\"\n      });\n    } else {\n      forgotpassword(this.state.email)\n        .then(data => {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: \"rest password link sent to your email\"\n          });\n        })\n        .catch(error => {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: error\n          });\n        });\n      /*.then(res => {\n        if (res === 'success') {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: \"rest password link sent to your email\"\n          })\n        }\n        else {\n          this.setState({\n            snackbarOpen: true,\n            snackbarMsg: res\n          })\n        }\n      })*/\n    }\n  };\n  //used to display brief message\n  snackbarClose = e => {\n    this.setState({ snackbarOpen: false });\n  };\n  onChangeEmail = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <div className=\"fcomp\">\n      <Card class=\"fCard\">\n        <div >\n        <p className=\"forgotpwd_head\"><u>Enter Email</u></p>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"messege-id\">{this.state.snackbarMsg}</span>}\n          action={\n            <IconButton\n              key=\"close\"\n              arial-label=\"close\"\n              color=\"inherit\"\n              onClick={this.snackbarClose}\n            ></IconButton>\n          }\n        />\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n            />\n          <div className=\"fSubmitButton\">\n          <Button\n            onClick={this.handleClick}\n            variant=\"contained\"\n            style={{ color: \"primary\", backgroundColor:\"#3f51b5\",fontcolor:\"white\" }}\n          >\n            Submit\n          </Button>\n          </div>\n      </Card>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}