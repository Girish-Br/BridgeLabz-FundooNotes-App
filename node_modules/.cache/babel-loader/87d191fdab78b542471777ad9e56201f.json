{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nrequire('@firebase/installations');\n\nvar logger$1 = require('@firebase/logger');\n\nvar version = \"0.2.26\";\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\"\n/* TRACE_STARTED_BEFORE */\n] = 'Trace {$traceName} was started before.', _a[\"trace stopped\"\n/* TRACE_STOPPED_BEFORE */\n] = 'Trace {$traceName} is not running.', _a[\"no window\"\n/* NO_WINDOW */\n] = 'Window is not available.', _a[\"no app id\"\n/* NO_APP_ID */\n] = 'App id is not available.', _a[\"no project id\"\n/* NO_PROJECT_ID */\n] = 'Project id is not available.', _a[\"no api key\"\n/* NO_API_KEY */\n] = 'Api key is not available.', _a[\"invalid cc log\"\n/* INVALID_CC_LOG */\n] = 'Attempted to queue invalid cc event', _a[\"FB not default\"\n/* FB_NOT_DEFAULT */\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\"\n/* RC_NOT_OK */\n] = 'RC response is not ok', _a[\"invalid attribute name\"\n/* INVALID_ATTRIBUTE_NAME */\n] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\"\n/* INVALID_ATTRIBUTE_VALUE */\n] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalide custom metric name\"\n/* INVALID_CUSTOM_METRIC_NAME */\n] = 'Custom metric name {$customMetricName} is invalid', _a);\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by set methods.\r\n */\n\nvar Api =\n/** @class */\nfunction () {\n  function Api(window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  };\n\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  };\n\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  };\n\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  };\n\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n\n  Api.prototype.requiredApisAvailable = function () {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\n\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  };\n\n  return Api;\n}();\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar settingsServiceInstance;\n\nvar SettingsService =\n/** @class */\nfunction () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\"\n      /* NO_APP_ID */\n      );\n    }\n\n    return appId;\n  };\n\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\"\n      /* NO_PROJECT_ID */\n      );\n    }\n\n    return projectId;\n  };\n\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\"\n      /* NO_API_KEY */\n      );\n    }\n\n    return apiKey;\n  };\n\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  };\n\n  return SettingsService;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar iid;\n\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().firebaseAppInstance.installations().getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().firebaseAppInstance.installations().getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n        return 3\n        /* UNCONTROLLED */\n        ;\n      }\n  } else {\n      return 1\n      /* UNSUPPORTED */\n      ;\n    }\n}\n\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\n\nvar SECONDARY_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid).then(function (config) {\n    return processConfig(config);\n  }).then(function (config) {\n    return storeConfig(config);\n  },\n  /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\n\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n\n  if (!configStringified) {\n    return;\n  }\n\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\n\nfunction storeConfig(config) {\n  if (!config) {\n    return;\n  }\n\n  var localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\n\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } // In case response is not ok. This will be caught by catch.\n\n\n      throw ERROR_FACTORY.create(\"RC response not ok\"\n      /* RC_NOT_OK */\n      );\n    });\n  }).catch(function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\n\n\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } // Set the per session trace and network logging flags.\n\n\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\n\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar initializationStatus = 1\n/* notInitialized */\n;\nvar initializationPromise;\n\nfunction getInitializationPromise() {\n  initializationStatus = 2\n  /* initializationPending */\n  ;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\n\nfunction isPerfInitialized() {\n  return initializationStatus === 3\n  /* initialized */\n  ;\n}\n\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\n\n\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function () {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus() {\n  initializationStatus = 3\n  /* initialized */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\n\nvar DEFAULT_REMAINING_TRIES = 3;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\n\nvar queue = [];\n\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n\n\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    } // Capture a snapshot of the queue and empty the \"official queue\".\n\n\n    var staged = tslib.__spreadArrays(queue);\n\n    queue = [];\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n\n    var log_event = staged.map(function (evt) {\n      return {\n        source_extension_json: evt.message,\n        event_time_ms: String(evt.eventTime)\n      };\n    });\n    var data = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1,\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event: log_event\n    };\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(function (res) {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n\n      return res.json();\n    }).then(function (res) {\n      var wait = Number(res.next_request_wait_millis); // Find the next call wait time from the response.\n\n      var requestOffset = isNaN(wait) ? DEFAULT_SEND_INTERVAL_MS : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n      remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\n\n      processQueue(requestOffset);\n    }).catch(function () {\n      /**\r\n       * If the request fails for some reason, add the events that were attempted\r\n       * back to the primary queue to retry later.\r\n       */\n      queue = tslib.__spreadArrays(staged, queue);\n      remainingTries--;\n      consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n      processQueue(DEFAULT_SEND_INTERVAL_MS);\n    });\n  }, timeOffset);\n}\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\"\n    /* INVALID_CC_LOG */\n    );\n  } // Add the new event to the queue.\n\n\n  queue = tslib.__spreadArrays(queue, [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\n\n\nfunction ccHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return function (_loggerInstance, _level) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enble camelcase */\n\n\nvar logger; // This method is not called before initialization.\n\nfunction getLogger() {\n  if (logger) {\n    return logger;\n  }\n\n  var ccLogger = ccHandler(serializer);\n  logger = new logger$1.Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n}\n\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  } // Do not log if trace is custom and data collection is disabled.\n\n\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  } // Do not log if required apis are not available.\n\n\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  } // Only log the page load auto traces if page is visible.\n\n\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\n\nfunction sendTraceLog(trace) {\n  if (getIid()) {\n    setTimeout(function () {\n      return getLogger().log(trace, 1\n      /* Trace */\n      );\n    }, 0);\n  }\n}\n\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  } // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n\n\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return getLogger().log(networkRequest, 0\n    /* NetworkRequest */\n    );\n  }, 0);\n}\n\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0\n  /* NetworkRequest */\n  ) {\n      return serializeNetworkRequest(resource);\n    }\n\n  return serializeTrace(resource);\n}\n\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n  }\n\n  var customAttributes = trace.getAttributes();\n\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n  }\n\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\nfunction convertToKeyValueArray(obj) {\n  var keys = Object.keys(obj);\n  return keys.map(function (key) {\n    return {\n      key: key,\n      value: obj[key]\n    };\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\n\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1\n    /* UNINITIALIZED */\n    ;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n\n\n  Trace.prototype.start = function () {\n    if (this.state !== 1\n    /* UNINITIALIZED */\n    ) {\n        throw ERROR_FACTORY.create(\"trace started\"\n        /* TRACE_STARTED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.api.mark(this.traceStartMark);\n    this.state = 2\n    /* RUNNING */\n    ;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n\n\n  Trace.prototype.stop = function () {\n    if (this.state !== 2\n    /* RUNNING */\n    ) {\n        throw ERROR_FACTORY.create(\"trace stopped\"\n        /* TRACE_STOPPED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.state = 3\n    /* TERMINATED */\n    ;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n\n\n  Trace.prototype.record = function (startTime, duration, options) {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n\n    if (options && options.attributes) {\n      this.customAttributes = tslib.__assign({}, options.attributes);\n    }\n\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist.\r\n   * @param counter Name of the custom metric\r\n   * @param num Increment by value\r\n   */\n\n\n  Trace.prototype.incrementMetric = function (counter, num) {\n    if (num === void 0) {\n      num = 1;\n    }\n\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, 0);\n    }\n\n    this.counters[counter] += num;\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist.\r\n   * @param counter Name of the custom metric\r\n   * @param num Set custom metric to this value\r\n   */\n\n\n  Trace.prototype.putMetric = function (counter, num) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = num;\n    } else {\n      throw ERROR_FACTORY.create(\"invalide custom metric name\"\n      /* INVALID_CUSTOM_METRIC_NAME */\n      , {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n\n\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n\n\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    } // Throw appropriate error when the attribute name or value is invalid.\n\n\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\"\n      /* INVALID_ATTRIBUTE_NAME */\n      , {\n        attributeName: attr\n      });\n    }\n\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\"\n      /* INVALID_ATTRIBUTE_VALUE */\n      , {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n\n\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n\n    delete this.customAttributes[attr];\n  };\n\n  Trace.prototype.getAttributes = function () {\n    return tslib.__assign({}, this.customAttributes);\n  };\n\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n\n\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n\n\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n\n    if (!route) {\n      return;\n    }\n\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\n\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n\n    logTrace(trace);\n  };\n\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n\n  return Trace;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\n\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FID_WAIT_TIME_MS = 5000;\n\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  } // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n\n\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\n\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\n\n  var measures = api.getEntriesByType('measure');\n\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  } // Setup an observer to capture the measures from this point on.\n\n\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n\n  Trace.createUserTimingTrace(measureName);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PerformanceController =\n/** @class */\nfunction () {\n  function PerformanceController(app) {\n    this.app = app;\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n    } else {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n    }\n  }\n\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nfunction registerPerformance(instance) {\n  var factoryMethod = function (app) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\"\n      /* FB_NOT_DEFAULT */\n      );\n    }\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    return new PerformanceController(app);\n  }; // Register performance with firebase-app.\n\n\n  var namespaceExports = {};\n  instance.INTERNAL.registerService('performance', factoryMethod, namespaceExports);\n}\n\nregisterPerformance(firebase);\nexports.registerPerformance = registerPerformance;","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@firebase/performance/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","firebase","require","tslib","util","logger$1","version","SDK_VERSION","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","_a","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","apiInstance","windowInstance","Api","window","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","name","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","setupObserver","entryType","callback","observer","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","undefined","setupApi","settingsServiceInstance","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","iid","getIidPromise","iidPromise","installations","getId","then","iidVal","getIid","getAuthTokenPromise","authTokenPromise","getToken","authTokenVal","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","matchesReservedPrefix","some","prefix","startsWith","match","isValidCustomAttributeValue","consoleLogger","Logger","logLevel","LogLevel","INFO","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","FIS_AUTH_PREFIX","getConfig","config","getStoredConfig","processConfig","resolve","getRemoteConfig","storeConfig","expiryString","getItem","configValid","configStringified","configResponse","JSON","parse","setItem","stringify","String","Date","now","COULD_NOT_GET_CONFIG_MSG","authToken","configEndPoint","request","Request","method","headers","Authorization","body","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","catch","info","entries","fpr_enabled","fpr_log_source","Number","fpr_log_endpoint_url","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","expiry","samplingRate","Math","random","initializationStatus","initializationPromise","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","handler_1","removeEventListener","addEventListener","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","processQueue","timeOffset","setTimeout","staged","__spreadArrays","log_event","map","evt","source_extension_json","message","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","addToQueue","ccHandler","serializer","_loggerInstance","_level","args","arguments","apply","logger","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","isAuto","sendTraceLog","log","logNetworkRequest","networkRequest","url","resource","resourceType","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","keys","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","obj","key","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","isValidMetricName","traceName","indexOf","Trace","traceMeasureName","state","api","randomId","floor","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","start","stop","record","startTime","duration","attributes","__assign","metrics","metric","incrementMetric","counter","num","putMetric","customMetricName","getMetric","putAttribute","attr","isValidName","isValidValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","resources","resources_1","timeoutId_1","fid","clearTimeout","measures","measures_1","substring","PerformanceController","app","get","set","val","enumerable","configurable","DEFAULT_ENTRY_NAME","registerPerformance","instance","factoryMethod","namespaceExports","INTERNAL","registerService"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nrequire('@firebase/installations');\nvar logger$1 = require('@firebase/logger');\n\nvar version = \"0.2.26\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar SECONDARY_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(function (config) { return processConfig(config); })\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */ function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    if (!config) {\r\n        return;\r\n    }\r\n    var localStorage = Api.getInstance().localStorage;\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: FIS_AUTH_PREFIX + \" \" + authToken\r\n            },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        // Capture a snapshot of the queue and empty the \"official queue\".\r\n        var staged = tslib.__spreadArrays(queue);\r\n        queue = [];\r\n        /* eslint-disable camelcase */\r\n        // We will pass the JSON serialized event to the backend.\r\n        var log_event = staged.map(function (evt) { return ({\r\n            source_extension_json: evt.message,\r\n            event_time_ms: String(evt.eventTime)\r\n        }); });\r\n        var data = {\r\n            request_time_ms: String(Date.now()),\r\n            client_info: {\r\n                client_type: 1,\r\n                js_client_info: {}\r\n            },\r\n            log_source: SettingsService.getInstance().logSource,\r\n            log_event: log_event\r\n        };\r\n        /* eslint-enable camelcase */\r\n        fetch(SettingsService.getInstance().logEndPointUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(function (res) {\r\n            if (!res.ok) {\r\n                consoleLogger.info('Call to Firebase backend failed.');\r\n            }\r\n            return res.json();\r\n        })\r\n            .then(function (res) {\r\n            var wait = Number(res.next_request_wait_millis);\r\n            // Find the next call wait time from the response.\r\n            var requestOffset = isNaN(wait)\r\n                ? DEFAULT_SEND_INTERVAL_MS\r\n                : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\r\n            remainingTries = DEFAULT_REMAINING_TRIES;\r\n            // Schedule the next process.\r\n            processQueue(requestOffset);\r\n        })\r\n            .catch(function () {\r\n            /**\r\n             * If the request fails for some reason, add the events that were attempted\r\n             * back to the primary queue to retry later.\r\n             */\r\n            queue = tslib.__spreadArrays(staged, queue);\r\n            remainingTries--;\r\n            consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n            processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        });\r\n    }, timeOffset);\r\n}\r\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = tslib.__spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction ccHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    // The underscores for loggerInstance and level parameters are added to avoid the\r\n    // noUnusedParameters related error.\r\n    return function (_loggerInstance, _level) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction getLogger() {\r\n    if (logger) {\r\n        return logger;\r\n    }\r\n    var ccLogger = ccHandler(serializer);\r\n    logger = new logger$1.Logger('@firebase/performance/cc');\r\n    logger.logHandler = ccLogger;\r\n    return logger;\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (getIid()) {\r\n        setTimeout(function () { return getLogger().log(trace, 1 /* Trace */); }, 0);\r\n    }\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\r\n    if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return getLogger().log(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = convertToKeyValueArray(trace.counters);\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\r\nfunction convertToKeyValueArray(obj) {\r\n    var keys = Object.keys(obj);\r\n    return keys.map(function (key) { return ({ key: key, value: obj[key] }); });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, num) {\r\n        if (num === void 0) { num = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, 0);\r\n        }\r\n        this.counters[counter] += num;\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, num) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = num;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            getInitializationPromise().then(setupOobResources, setupOobResources);\r\n        }\r\n        else {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    var namespaceExports = {};\r\n    instance.INTERNAL.registerService('performance', factoryMethod, namespaceExports);\r\n}\r\nregisterPerformance(firebase);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n"]},"metadata":{},"sourceType":"script"}