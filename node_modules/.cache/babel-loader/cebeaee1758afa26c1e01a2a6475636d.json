{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\nimport '@firebase/installations';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_MAP = (_a = {}, _a[\"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n] = 'This method is available in a Window context.', _a[\"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n] = 'This method is available in a service worker context.', _a[\"should-be-overriden\"\n/* SHOULD_BE_INHERITED */\n] = 'This method should be overriden by extended classes.', _a[\"bad-sender-id\"\n/* BAD_SENDER_ID */\n] = \"Please ensure that 'messagingSenderId' is set \" + 'correctly in the options passed into firebase.initializeApp().', _a[\"permission-default\"\n/* PERMISSION_DEFAULT */\n] = 'The required permissions were not granted and dismissed instead.', _a[\"permission-blocked\"\n/* PERMISSION_BLOCKED */\n] = 'The required permissions were not granted and blocked instead.', _a[\"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n] = \"This browser doesn't support the API's \" + 'required to use the firebase SDK.', _a[\"notifications-blocked\"\n/* NOTIFICATIONS_BLOCKED */\n] = 'Notifications have been blocked.', _a[\"failed-serviceworker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n] = 'We are unable to register the ' + 'default service worker. {$browserErrorMessage}', _a[\"sw-registration-expected\"\n/* SW_REGISTRATION_EXPECTED */\n] = 'A service worker registration was the expected input.', _a[\"get-subscription-failed\"\n/* GET_SUBSCRIPTION_FAILED */\n] = 'There was an error when trying to get ' + 'any existing Push Subscriptions.', _a[\"invalid-saved-token\"\n/* INVALID_SAVED_TOKEN */\n] = 'Unable to access details of the saved token.', _a[\"sw-reg-redundant\"\n/* SW_REG_REDUNDANT */\n] = 'The service worker being used for push was made redundant.', _a[\"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n] = 'A problem occured while subscribing the user to FCM: {$errorInfo}', _a[\"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n] = 'FCM returned no token when subscribing the user to push.', _a[\"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$errorInfo}', _a[\"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n] = 'A problem occured while updating the user from FCM: {$errorInfo}', _a[\"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n] = 'FCM returned no token when updating the user to push.', _a[\"use-sw-before-get-token\"\n/* USE_SW_BEFORE_GET_TOKEN */\n] = 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.', _a[\"invalid-delete-token\"\n/* INVALID_DELETE_TOKEN */\n] = 'You must pass a valid token into ' + 'deleteToken(), i.e. the token from getToken().', _a[\"delete-token-not-found\"\n/* DELETE_TOKEN_NOT_FOUND */\n] = 'The deletion attempt for token could not ' + 'be performed as the token was not found.', _a[\"delete-scope-not-found\"\n/* DELETE_SCOPE_NOT_FOUND */\n] = 'The deletion attempt for service worker ' + 'scope could not be performed as the scope was not found.', _a[\"bg-handler-function-expected\"\n/* BG_HANDLER_FUNCTION_EXPECTED */\n] = 'The input to setBackgroundMessageHandler() must be a function.', _a[\"no-window-client-to-msg\"\n/* NO_WINDOW_CLIENT_TO_MSG */\n] = 'An attempt was made to message a non-existant window client.', _a[\"unable-to-resubscribe\"\n/* UNABLE_TO_RESUBSCRIBE */\n] = 'There was an error while re-subscribing ' + 'the FCM token for push messaging. Will have to resubscribe the ' + 'user on next visit. {$errorInfo}', _a[\"no-fcm-token-for-resubscribe\"\n/* NO_FCM_TOKEN_FOR_RESUBSCRIBE */\n] = 'Could not find an FCM token ' + 'and as a result, unable to resubscribe. Will have to resubscribe the ' + 'user on next visit.', _a[\"failed-to-delete-token\"\n/* FAILED_TO_DELETE_TOKEN */\n] = 'Unable to delete the currently saved token.', _a[\"no-sw-in-reg\"\n/* NO_SW_IN_REG */\n] = 'Even though the service worker registration was ' + 'successful, there was a problem accessing the service worker itself.', _a[\"bad-scope\"\n/* BAD_SCOPE */\n] = 'The service worker scope must be a string with at ' + 'least one character.', _a[\"bad-vapid-key\"\n/* BAD_VAPID_KEY */\n] = 'The public VAPID key is not a Uint8Array with 65 bytes.', _a[\"bad-subscription\"\n/* BAD_SUBSCRIPTION */\n] = 'The subscription must be a valid PushSubscription.', _a[\"bad-token\"\n/* BAD_TOKEN */\n] = 'The FCM Token used for storage / lookup was not ' + 'a valid token string.', _a[\"failed-delete-vapid-key\"\n/* FAILED_DELETE_VAPID_KEY */\n] = 'The VAPID key could not be deleted.', _a[\"invalid-public-vapid-key\"\n/* INVALID_PUBLIC_VAPID_KEY */\n] = 'The public VAPID key must be a string.', _a[\"use-public-key-before-get-token\"\n/* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */\n] = 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.', _a[\"public-vapid-key-decryption-failed\"\n/* PUBLIC_KEY_DECRYPTION_FAILED */\n] = 'The public VAPID key did not equal 65 bytes when decrypted.', _a);\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([0x04, 0x33, 0x94, 0xf7, 0xdf, 0xa1, 0xeb, 0xb1, 0xdc, 0x03, 0xa2, 0x5e, 0x15, 0x71, 0xdb, 0x48, 0xd3, 0x2e, 0xed, 0xed, 0xb2, 0x34, 0xdb, 0xb7, 0x47, 0x3a, 0x0c, 0x8f, 0xc4, 0xcc, 0xe1, 0x6f, 0x3c, 0x8c, 0x84, 0xdf, 0xab, 0xb6, 0x66, 0x3e, 0xf2, 0x0c, 0xd4, 0x8b, 0xfe, 0xe3, 0xf9, 0x76, 0x2f, 0x14, 0x1c, 0x63, 0x08, 0x6a, 0x6f, 0x2d, 0xb1, 0x1a, 0x95, 0xb0, 0xce, 0x37, 0xc0, 0x9c, 0x6e]);\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nvar FN_CAMPAIGN_ID = 'google.c.a.c_id';\nvar FN_CAMPAIGN_NAME = 'google.c.a.c_l';\nvar FN_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\n\nvar FN_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isArrayBufferEqual(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a === b) {\n    return true;\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  var viewA = new DataView(a);\n  var viewB = new DataView(b);\n\n  for (var i = 0; i < a.byteLength; i++) {\n    if (viewA.getUint8(i) !== viewB.getUint8(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction toBase64(arrayBuffer) {\n  var uint8Version = new Uint8Array(arrayBuffer);\n  return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\n}\n\nfunction arrayBufferToBase64(arrayBuffer) {\n  var base64String = toBase64(arrayBuffer);\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SubscriptionManager =\n/** @class */\nfunction () {\n  function SubscriptionManager() {}\n\n  SubscriptionManager.prototype.getToken = function (app, subscription, vapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var headers, body, subscribeOptions, responseData, response, err_1, message;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getHeaders(app)];\n\n          case 1:\n            headers = _a.sent();\n            body = getBody(subscription, vapidKey);\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , fetch(getEndpoint(app), subscribeOptions)];\n\n          case 3:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 4:\n            responseData = _a.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_1 = _a.sent();\n            throw errorFactory.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: err_1\n            });\n\n          case 6:\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-subscribe-failed\"\n              /* TOKEN_SUBSCRIBE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            if (!responseData.token) {\n              throw errorFactory.create(\"token-subscribe-no-token\"\n              /* TOKEN_SUBSCRIBE_NO_TOKEN */\n              );\n            }\n\n            return [2\n            /*return*/\n            , responseData.token];\n        }\n      });\n    });\n  };\n  /**\r\n   * Update the underlying token details for fcmToken.\r\n   */\n\n\n  SubscriptionManager.prototype.updateToken = function (tokenDetails, app, subscription, vapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var headers, body, updateOptions, responseData, response, err_2, message;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getHeaders(app)];\n\n          case 1:\n            headers = _a.sent();\n            body = getBody(subscription, vapidKey);\n            updateOptions = {\n              method: 'PATCH',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , fetch(getEndpoint(app) + \"/\" + tokenDetails.fcmToken, updateOptions)];\n\n          case 3:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 4:\n            responseData = _a.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_2 = _a.sent();\n            throw errorFactory.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: err_2\n            });\n\n          case 6:\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-update-failed\"\n              /* TOKEN_UPDATE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            if (!responseData.token) {\n              throw errorFactory.create(\"token-update-no-token\"\n              /* TOKEN_UPDATE_NO_TOKEN */\n              );\n            }\n\n            return [2\n            /*return*/\n            , responseData.token];\n        }\n      });\n    });\n  };\n\n  SubscriptionManager.prototype.deleteToken = function (app, tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      var headers, unsubscribeOptions, response, responseData, message, err_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getHeaders(app)];\n\n          case 1:\n            headers = _a.sent();\n            unsubscribeOptions = {\n              method: 'DELETE',\n              headers: headers\n            };\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , fetch(getEndpoint(app) + \"/\" + tokenDetails.fcmToken, unsubscribeOptions)];\n\n          case 3:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 4:\n            responseData = _a.sent();\n\n            if (responseData.error) {\n              message = responseData.error.message;\n              throw errorFactory.create(\"token-unsubscribe-failed\"\n              /* TOKEN_UNSUBSCRIBE_FAILED */\n              , {\n                errorInfo: message\n              });\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_3 = _a.sent();\n            throw errorFactory.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: err_3\n            });\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return SubscriptionManager;\n}();\n\nfunction getEndpoint(app) {\n  return ENDPOINT + \"/projects/\" + app.options.projectId + \"/registrations\";\n}\n\nfunction getHeaders(app) {\n  return __awaiter(this, void 0, void 0, function () {\n    var installations, authToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          installations = app.installations();\n          return [4\n          /*yield*/\n          , installations.getToken()];\n\n        case 1:\n          authToken = _a.sent();\n          return [2\n          /*return*/\n          , new Headers({\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'x-goog-api-key': app.options.apiKey,\n            'x-goog-firebase-installations-auth': \"FIS \" + authToken\n          })];\n      }\n    });\n  });\n}\n\nfunction getBody(subscription, vapidKey) {\n  var p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\n  var auth = arrayBufferToBase64(subscription.getKey('auth'));\n  var body = {\n    web: {\n      endpoint: subscription.endpoint,\n      p256dh: p256dh,\n      auth: auth\n    }\n  };\n\n  if (!isArrayBufferEqual(vapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\n    body.web.applicationPubKey = arrayBufferToBase64(vapidKey);\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction base64ToArrayBuffer(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'undefined';\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction handleDb(db, app) {\n  if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n    // We found a database with the name 'undefined', but our expected object\n    // store isn't defined.\n    return;\n  }\n\n  var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\n  var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\n  var subscriptionManager = new SubscriptionManager();\n  var openCursorRequest = objectStore.openCursor();\n\n  openCursorRequest.onerror = function (event) {\n    // NOOP - Nothing we can do.\n    console.warn('Unable to cleanup old IDB.', event);\n  };\n\n  openCursorRequest.onsuccess = function () {\n    var cursor = openCursorRequest.result;\n\n    if (cursor) {\n      // cursor.value contains the current record being iterated through\n      // this is where you'd do something with the result\n      var tokenDetails = cursor.value; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n      subscriptionManager.deleteToken(app, tokenDetails);\n      cursor.continue();\n    } else {\n      db.close();\n      indexedDB.deleteDatabase(OLD_DB_NAME);\n    }\n  };\n}\n\nfunction cleanV1(app) {\n  var request = indexedDB.open(OLD_DB_NAME);\n\n  request.onerror = function (_event) {// NOOP - Nothing we can do.\n  };\n\n  request.onsuccess = function (_event) {\n    var db = request.result;\n    handleDb(db, app);\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DbInterface =\n/** @class */\nfunction () {\n  function DbInterface() {\n    this.dbPromise = null;\n  }\n  /** Gets record(s) from the objectStore that match the given key. */\n\n\n  DbInterface.prototype.get = function (key) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.get(key);\n    });\n  };\n  /** Gets record(s) from the objectStore that match the given index. */\n\n\n  DbInterface.prototype.getIndex = function (index, key) {\n    function runRequest(objectStore) {\n      var idbIndex = objectStore.index(index);\n      return idbIndex.get(key);\n    }\n\n    return this.createTransaction(runRequest);\n  };\n  /** Assigns or overwrites the record for the given value. */\n  // IndexedDB values are of type \"any\"\n\n\n  DbInterface.prototype.put = function (value) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.put(value);\n    }, 'readwrite');\n  };\n  /** Deletes record(s) from the objectStore that match the given key. */\n\n\n  DbInterface.prototype.delete = function (key) {\n    return this.createTransaction(function (objectStore) {\n      return objectStore.delete(key);\n    }, 'readwrite');\n  };\n  /**\r\n   * Close the currently open database.\r\n   */\n\n\n  DbInterface.prototype.closeDatabase = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var db;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.dbPromise) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.dbPromise];\n\n          case 1:\n            db = _a.sent();\n            db.close();\n            this.dbPromise = null;\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates an IndexedDB Transaction and passes its objectStore to the\r\n   * runRequest function, which runs the database request.\r\n   *\r\n   * @return Promise that resolves with the result of the runRequest function\r\n   */\n\n\n  DbInterface.prototype.createTransaction = function (runRequest, mode) {\n    if (mode === void 0) {\n      mode = 'readonly';\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var db, transaction, request, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDb()];\n\n          case 1:\n            db = _a.sent();\n            transaction = db.transaction(this.objectStoreName, mode);\n            request = transaction.objectStore(this.objectStoreName);\n            return [4\n            /*yield*/\n            , promisify(runRequest(request))];\n\n          case 2:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              transaction.oncomplete = function () {\n                resolve(result);\n              };\n\n              transaction.onerror = function () {\n                reject(transaction.error);\n              };\n            })];\n        }\n      });\n    });\n  };\n  /** Gets the cached db connection or opens a new one. */\n\n\n  DbInterface.prototype.getDb = function () {\n    var _this = this;\n\n    if (!this.dbPromise) {\n      this.dbPromise = new Promise(function (resolve, reject) {\n        var request = indexedDB.open(_this.dbName, _this.dbVersion);\n\n        request.onsuccess = function () {\n          resolve(request.result);\n        };\n\n        request.onerror = function () {\n          _this.dbPromise = null;\n          reject(request.error);\n        };\n\n        request.onupgradeneeded = function (event) {\n          return _this.onDbUpgrade(request, event);\n        };\n      });\n    }\n\n    return this.dbPromise;\n  };\n\n  return DbInterface;\n}();\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\n\n\nfunction promisify(request) {\n  return new Promise(function (resolve, reject) {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n\n    request.onerror = function () {\n      reject(request.error);\n    };\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TokenDetailsModel =\n/** @class */\nfunction (_super) {\n  __extends(TokenDetailsModel, _super);\n\n  function TokenDetailsModel(app) {\n    var _this = _super.call(this) || this;\n\n    _this.app = app;\n    _this.dbName = 'fcm_token_details_db';\n    _this.dbVersion = 4;\n    _this.objectStoreName = 'fcm_token_object_Store';\n    return _this;\n  }\n\n  TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\n    var db = request.result; // Lack of 'break' statements is intentional.\n\n    switch (event.oldVersion) {\n      case 0:\n        {\n          // New IDB instance\n          var objectStore = db.createObjectStore(this.objectStoreName, {\n            keyPath: 'swScope'\n          }); // Make sure the sender ID can be searched\n\n          objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n            unique: false\n          });\n          objectStore.createIndex('fcmToken', 'fcmToken', {\n            unique: true\n          });\n        }\n\n      case 1:\n        {\n          // Prior to version 2, we were using either 'fcm_token_details_db'\n          // or 'undefined' as the database name due to bug in the SDK\n          // So remove the old tokens and databases.\n          cleanV1(this.app);\n        }\n\n      case 2:\n        {\n          // Update from v2 to v4 directly in a single openCursor request.\n          // We need to do this because for some reason, doing a subsequent update on the same data\n          // in the same transaction drops the first update.\n          var objectStore = request.transaction.objectStore(this.objectStoreName);\n          var cursorRequest_1 = objectStore.openCursor();\n\n          cursorRequest_1.onsuccess = function () {\n            var cursor = cursorRequest_1.result;\n\n            if (cursor) {\n              var value = cursor.value;\n\n              var newValue = __assign({}, value);\n\n              if (!value.createTime) {\n                newValue.createTime = Date.now();\n              }\n\n              if (typeof value.vapidKey === 'string') {\n                newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\n              }\n\n              if (typeof value.auth === 'string') {\n                newValue.auth = base64ToArrayBuffer(value.auth).buffer;\n              }\n\n              if (typeof value.auth === 'string') {\n                newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\n              }\n\n              if (typeof value.fcmPushSet === 'string') {\n                delete newValue.fcmPushSet;\n              }\n\n              cursor.update(newValue);\n              cursor.continue();\n            }\n          }; // Break here as we've already updated to v4.\n\n\n          break;\n        }\n\n      case 3:\n        {\n          // Update from V3 to V4.\n          var objectStore = request.transaction.objectStore(this.objectStoreName);\n          var cursorRequest_2 = objectStore.openCursor();\n\n          cursorRequest_2.onsuccess = function () {\n            var cursor = cursorRequest_2.result;\n\n            if (cursor) {\n              var value = cursor.value;\n\n              var newValue = __assign({}, value);\n\n              if (typeof value.fcmPushSet === 'string') {\n                delete newValue.fcmPushSet;\n              }\n\n              cursor.update(newValue);\n              cursor.continue();\n            }\n          };\n        }\n    }\n  };\n  /**\r\n   * Given a token, this method will look up the details in indexedDB.\r\n   */\n\n\n  TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!fcmToken) {\n          throw errorFactory.create(\"bad-token\"\n          /* BAD_TOKEN */\n          );\n        }\n\n        validateInputs({\n          fcmToken: fcmToken\n        });\n        return [2\n        /*return*/\n        , this.getIndex('fcmToken', fcmToken)];\n      });\n    });\n  };\n  /**\r\n   * Given a service worker scope, this method will look up the details in\r\n   * indexedDB.\r\n   * @return The details associated with that token.\r\n   */\n\n\n  TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!swScope) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        validateInputs({\n          swScope: swScope\n        });\n        return [2\n        /*return*/\n        , this.get(swScope)];\n      });\n    });\n  };\n  /**\r\n   * Save the details for the fcm token for re-use at a later date.\r\n   * @param input A plain js object containing args to save.\r\n   */\n\n\n  TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!tokenDetails.swScope) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        if (!tokenDetails.vapidKey) {\n          throw errorFactory.create(\"bad-vapid-key\"\n          /* BAD_VAPID_KEY */\n          );\n        }\n\n        if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\n          throw errorFactory.create(\"bad-subscription\"\n          /* BAD_SUBSCRIPTION */\n          );\n        }\n\n        if (!tokenDetails.fcmSenderId) {\n          throw errorFactory.create(\"bad-sender-id\"\n          /* BAD_SENDER_ID */\n          );\n        }\n\n        if (!tokenDetails.fcmToken) {\n          throw errorFactory.create(\"bad-token\"\n          /* BAD_TOKEN */\n          );\n        }\n\n        validateInputs(tokenDetails);\n        return [2\n        /*return*/\n        , this.put(tokenDetails)];\n      });\n    });\n  };\n  /**\r\n   * This method deletes details of the current FCM token.\r\n   * It's returning a promise in case we need to move to an async\r\n   * method for deleting at a later date.\r\n   *\r\n   * @return Resolves once the FCM token details have been deleted and returns\r\n   * the deleted details.\r\n   */\n\n\n  TokenDetailsModel.prototype.deleteToken = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var details;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof token !== 'string' || token.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject(errorFactory.create(\"invalid-delete-token\"\n              /* INVALID_DELETE_TOKEN */\n              ))];\n            }\n\n            return [4\n            /*yield*/\n            , this.getTokenDetailsFromToken(token)];\n\n          case 1:\n            details = _a.sent();\n\n            if (!details) {\n              throw errorFactory.create(\"delete-token-not-found\"\n              /* DELETE_TOKEN_NOT_FOUND */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.delete(details.swScope)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , details];\n        }\n      });\n    });\n  };\n\n  return TokenDetailsModel;\n}(DbInterface);\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\n\n\nfunction validateInputs(input) {\n  if (input.fcmToken) {\n    if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\n      throw errorFactory.create(\"bad-token\"\n      /* BAD_TOKEN */\n      );\n    }\n  }\n\n  if (input.swScope) {\n    if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\n      throw errorFactory.create(\"bad-scope\"\n      /* BAD_SCOPE */\n      );\n    }\n  }\n\n  if (input.vapidKey) {\n    if (!(input.vapidKey instanceof Uint8Array) || input.vapidKey.length !== 65) {\n      throw errorFactory.create(\"bad-vapid-key\"\n      /* BAD_VAPID_KEY */\n      );\n    }\n  }\n\n  if (input.endpoint) {\n    if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.auth) {\n    if (!(input.auth instanceof ArrayBuffer)) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.p256dh) {\n    if (!(input.p256dh instanceof ArrayBuffer)) {\n      throw errorFactory.create(\"bad-subscription\"\n      /* BAD_SUBSCRIPTION */\n      );\n    }\n  }\n\n  if (input.fcmSenderId) {\n    if (typeof input.fcmSenderId !== 'string' || input.fcmSenderId.length === 0) {\n      throw errorFactory.create(\"bad-sender-id\"\n      /* BAD_SENDER_ID */\n      );\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\n\nvar VapidDetailsModel =\n/** @class */\nfunction (_super) {\n  __extends(VapidDetailsModel, _super);\n\n  function VapidDetailsModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dbName = 'fcm_vapid_details_db';\n    _this.dbVersion = 1;\n    _this.objectStoreName = 'fcm_vapid_object_Store';\n    return _this;\n  }\n\n  VapidDetailsModel.prototype.onDbUpgrade = function (request) {\n    var db = request.result;\n    db.createObjectStore(this.objectStoreName, {\n      keyPath: 'swScope'\n    });\n  };\n  /**\r\n   * Given a service worker scope, this method will look up the vapid key\r\n   * in indexedDB.\r\n   */\n\n\n  VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof swScope !== 'string' || swScope.length === 0) {\n              throw errorFactory.create(\"bad-scope\"\n              /* BAD_SCOPE */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.get(swScope)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result ? result.vapidKey : undefined];\n        }\n      });\n    });\n  };\n  /**\r\n   * Save a vapid key against a swScope for later date.\r\n   */\n\n\n  VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var details;\n      return __generator(this, function (_a) {\n        if (typeof swScope !== 'string' || swScope.length === 0) {\n          throw errorFactory.create(\"bad-scope\"\n          /* BAD_SCOPE */\n          );\n        }\n\n        if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\n          throw errorFactory.create(\"bad-vapid-key\"\n          /* BAD_VAPID_KEY */\n          );\n        }\n\n        details = {\n          swScope: swScope,\n          vapidKey: vapidKey\n        };\n        return [2\n        /*return*/\n        , this.put(details)];\n      });\n    });\n  };\n  /**\r\n   * This method deletes details of the current FCM VAPID key for a SW scope.\r\n   * Resolves once the scope/vapid details have been deleted and returns the\r\n   * deleted vapid key.\r\n   */\n\n\n  VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\n    return __awaiter(this, void 0, void 0, function () {\n      var vapidKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getVapidFromSWScope(swScope)];\n\n          case 1:\n            vapidKey = _a.sent();\n\n            if (!vapidKey) {\n              throw errorFactory.create(\"delete-scope-not-found\"\n              /* DELETE_SCOPE_NOT_FOUND */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.delete(swScope)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , vapidKey];\n        }\n      });\n    });\n  };\n\n  return VapidDetailsModel;\n}(DbInterface);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Token should be refreshed once a week.\n\n\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nvar BaseController =\n/** @class */\nfunction () {\n  function BaseController(app) {\n    var _this = this;\n\n    this.app = app;\n    this.vapidDetailsModel = new VapidDetailsModel();\n    this.subscriptionManager = new SubscriptionManager();\n\n    if (!app.options.messagingSenderId || typeof app.options.messagingSenderId !== 'string') {\n      throw errorFactory.create(\"bad-sender-id\"\n      /* BAD_SENDER_ID */\n      );\n    }\n\n    this.INTERNAL = {\n      delete: function () {\n        return _this.delete();\n      }\n    };\n    this.tokenDetailsModel = new TokenDetailsModel(app);\n  }\n\n  BaseController.prototype.getToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            currentPermission = this.getNotificationPermission_();\n\n            if (currentPermission === 'denied') {\n              throw errorFactory.create(\"notifications-blocked\"\n              /* NOTIFICATIONS_BLOCKED */\n              );\n            } else if (currentPermission !== 'granted') {\n              // We must wait for permission to be granted\n              return [2\n              /*return*/\n              , null];\n            }\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            swReg = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPublicVapidKey_()];\n\n          case 2:\n            publicVapidKey = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPushSubscription(swReg, publicVapidKey)];\n\n          case 3:\n            pushSubscription = _a.sent();\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\n\n          case 4:\n            tokenDetails = _a.sent();\n\n            if (tokenDetails) {\n              return [2\n              /*return*/\n              , this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\n            }\n\n            return [2\n            /*return*/\n            , this.getNewToken(swReg, pushSubscription, publicVapidKey)];\n        }\n      });\n    });\n  };\n  /**\r\n   * manageExistingToken is triggered if there's an existing FCM token in the\r\n   * database and it can take 3 different actions:\r\n   * 1) Retrieve the existing FCM token from the database.\r\n   * 2) If VAPID details have changed: Delete the existing token and create a\r\n   * new one with the new VAPID key.\r\n   * 3) If the database cache is invalidated: Send a request to FCM to update\r\n   * the token, and to check if the token is still valid on FCM-side.\r\n   */\n\n\n  BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      var isTokenValid, now;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\n            if (!isTokenValid) return [3\n            /*break*/\n            , 1];\n            now = Date.now();\n\n            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\n              return [2\n              /*return*/\n              , tokenDetails.fcmToken];\n            } else {\n              return [2\n              /*return*/\n              , this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\n            }\n\n          case 1:\n            // If the token is no longer valid (for example if the VAPID details\n            // have changed), delete the existing token from the FCM client and server\n            // database. No need to unsubscribe from the Service Worker as we have a\n            // good push subscription that we'd like to use in getNewToken.\n            return [4\n            /*yield*/\n            , this.deleteTokenFromDB(tokenDetails.fcmToken)];\n\n          case 2:\n            // If the token is no longer valid (for example if the VAPID details\n            // have changed), delete the existing token from the FCM client and server\n            // database. No need to unsubscribe from the Service Worker as we have a\n            // good push subscription that we'd like to use in getNewToken.\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.getNewToken(swReg, pushSubscription, publicVapidKey)];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\n    return __awaiter(this, void 0, void 0, function () {\n      var updatedToken, allDetails, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this.subscriptionManager.updateToken(tokenDetails, this.app, pushSubscription, publicVapidKey)];\n\n          case 1:\n            updatedToken = _a.sent();\n            allDetails = {\n              swScope: swReg.scope,\n              vapidKey: publicVapidKey,\n              fcmSenderId: this.app.options.messagingSenderId,\n              fcmToken: updatedToken,\n              createTime: Date.now(),\n              endpoint: pushSubscription.endpoint,\n              auth: pushSubscription.getKey('auth'),\n              p256dh: pushSubscription.getKey('p256dh')\n            };\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.saveTokenDetails(allDetails)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , updatedToken];\n\n          case 4:\n            e_1 = _a.sent();\n            return [4\n            /*yield*/\n            , this.deleteToken(tokenDetails.fcmToken)];\n\n          case 5:\n            _a.sent();\n\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var newToken, allDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.subscriptionManager.getToken(this.app, pushSubscription, publicVapidKey)];\n\n          case 1:\n            newToken = _a.sent();\n            allDetails = {\n              swScope: swReg.scope,\n              vapidKey: publicVapidKey,\n              fcmSenderId: this.app.options.messagingSenderId,\n              fcmToken: newToken,\n              createTime: Date.now(),\n              endpoint: pushSubscription.endpoint,\n              auth: pushSubscription.getKey('auth'),\n              p256dh: pushSubscription.getKey('p256dh')\n            };\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.saveTokenDetails(allDetails)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , newToken];\n        }\n      });\n    });\n  };\n  /**\r\n   * This method deletes tokens that the token manager looks after,\r\n   * unsubscribes the token from FCM  and then unregisters the push\r\n   * subscription if it exists. It returns a promise that indicates\r\n   * whether or not the unsubscribe request was processed successfully.\r\n   */\n\n\n  BaseController.prototype.deleteToken = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var registration, pushSubscription;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Delete the token details from the database.\n            return [4\n            /*yield*/\n            , this.deleteTokenFromDB(token)];\n\n          case 1:\n            // Delete the token details from the database.\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 2:\n            registration = _a.sent();\n            if (!registration) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , registration.pushManager.getSubscription()];\n\n          case 3:\n            pushSubscription = _a.sent();\n\n            if (pushSubscription) {\n              return [2\n              /*return*/\n              , pushSubscription.unsubscribe()];\n            }\n\n            _a.label = 4;\n\n          case 4:\n            // If there's no SW, consider it a success.\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\r\n   * This method will delete the token from the client database, and make a\r\n   * call to FCM to remove it from the server DB. Does not temper with the\r\n   * push subscription.\r\n   */\n\n\n  BaseController.prototype.deleteTokenFromDB = function (token) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.tokenDetailsModel.deleteToken(token)];\n\n          case 1:\n            tokenDetails = _a.sent();\n            return [4\n            /*yield*/\n            , this.subscriptionManager.deleteToken(this.app, tokenDetails)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Gets a PushSubscription for the current user.\r\n   */\n\n\n  BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var subscription;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , swRegistration.pushManager.getSubscription()];\n\n          case 1:\n            subscription = _a.sent();\n\n            if (subscription) {\n              return [2\n              /*return*/\n              , subscription];\n            }\n\n            return [2\n            /*return*/\n            , swRegistration.pushManager.subscribe({\n              userVisibleOnly: true,\n              applicationServerKey: publicVapidKey\n            })];\n        }\n      });\n    });\n  }; //\n  // The following methods should only be available in the window.\n  //\n\n  /**\r\n   * @deprecated Use Notification.requestPermission() instead.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n   */\n\n\n  BaseController.prototype.requestPermission = function () {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.useServiceWorker = function (_registration) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  };\n\n  BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\n    throw errorFactory.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  }; //\n  // The following methods are used by the service worker only.\n  //\n\n\n  BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\n    throw errorFactory.create(\"only-available-in-sw\"\n    /* AVAILABLE_IN_SW */\n    );\n  }; //\n  // The following methods are used by the service themselves and not exposed\n  // publicly or not expected to be used by developers.\n  //\n\n  /**\r\n   * This method is required to adhere to the Firebase interface.\r\n   * It closes any currently open indexdb database connections.\r\n   */\n\n\n  BaseController.prototype.delete = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.tokenDetailsModel.closeDatabase(), this.vapidDetailsModel.closeDatabase()])];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns the current Notification Permission state.\r\n   */\n\n\n  BaseController.prototype.getNotificationPermission_ = function () {\n    return Notification.permission;\n  };\n\n  BaseController.prototype.getTokenDetailsModel = function () {\n    return this.tokenDetailsModel;\n  };\n\n  BaseController.prototype.getVapidDetailsModel = function () {\n    return this.vapidDetailsModel;\n  }; // Visible for testing\n  // TODO: make protected\n\n\n  BaseController.prototype.getSubscriptionManager = function () {\n    return this.subscriptionManager;\n  };\n\n  return BaseController;\n}();\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\n\n\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\n  if (!tokenDetails.vapidKey || !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\n    return false;\n  }\n\n  var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\n  var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\n  var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\n  return isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FCM_MSG = 'FCM_MSG';\n\nvar SwController =\n/** @class */\nfunction (_super) {\n  __extends(SwController, _super);\n\n  function SwController(app) {\n    var _this = _super.call(this, app) || this;\n\n    _this.bgMessageHandler = null;\n    self.addEventListener('push', function (e) {\n      _this.onPush(e);\n    });\n    self.addEventListener('pushsubscriptionchange', function (e) {\n      _this.onSubChange(e);\n    });\n    self.addEventListener('notificationclick', function (e) {\n      _this.onNotificationClick(e);\n    });\n    return _this;\n  } // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onPush = function (event) {\n    event.waitUntil(this.onPush_(event));\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onSubChange = function (event) {\n    event.waitUntil(this.onSubChange_(event));\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.onNotificationClick = function (event) {\n    event.waitUntil(this.onNotificationClick_(event));\n  };\n  /**\r\n   * A handler for push events that shows notifications based on the content of\r\n   * the payload.\r\n   *\r\n   * The payload must be a JSON-encoded Object with a `notification` key. The\r\n   * value of the `notification` property will be used as the NotificationOptions\r\n   * object passed to showNotification. Additionally, the `title` property of the\r\n   * notification object will be used as the title.\r\n   *\r\n   * If there is no notification data in the payload then no notification will be\r\n   * shown.\r\n   */\n\n\n  SwController.prototype.onPush_ = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!event.data) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            try {\n              msgPayload = event.data.json();\n            } catch (err) {\n              // Not JSON so not an FCM message\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , this.hasVisibleClients_()];\n\n          case 1:\n            hasVisibleClients = _a.sent();\n\n            if (hasVisibleClients) {\n              // App in foreground. Send to page.\n              return [2\n              /*return*/\n              , this.sendMessageToWindowClients_(msgPayload)];\n            }\n\n            notificationDetails = this.getNotificationData_(msgPayload);\n            if (!notificationDetails) return [3\n            /*break*/\n            , 3];\n            notificationTitle = notificationDetails.title || '';\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 2:\n            reg = _a.sent();\n            actions = notificationDetails.actions;\n            maxActions = Notification.maxActions;\n\n            if (actions && maxActions && actions.length > maxActions) {\n              console.warn(\"This browser only supports \" + maxActions + \" actions.\" + \"The remaining actions will not be displayed.\");\n            }\n\n            return [2\n            /*return*/\n            , reg.showNotification(notificationTitle, notificationDetails)];\n\n          case 3:\n            if (!this.bgMessageHandler) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.bgMessageHandler(msgPayload)];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onSubChange_ = function (_event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            registration = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            err_1 = _a.sent();\n            throw errorFactory.create(\"unable-to-resubscribe\"\n            /* UNABLE_TO_RESUBSCRIBE */\n            , {\n              errorInfo: err_1\n            });\n\n          case 3:\n            _a.trys.push([3, 5,, 8]);\n\n            return [4\n            /*yield*/\n            , registration.pushManager.getSubscription()];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 5:\n            err_2 = _a.sent();\n            tokenDetailsModel = this.getTokenDetailsModel();\n            return [4\n            /*yield*/\n            , tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\n\n          case 6:\n            tokenDetails = _a.sent();\n\n            if (!tokenDetails) {\n              // This should rarely occure, but could if indexedDB\n              // is corrupted or wiped\n              throw err_2;\n            } // Attempt to delete the token if we know it's bad\n\n\n            return [4\n            /*yield*/\n            , this.deleteToken(tokenDetails.fcmToken)];\n\n          case 7:\n            // Attempt to delete the token if we know it's bad\n            _a.sent();\n\n            throw err_2;\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onNotificationClick_ = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msgPayload, link, windowClient, internalMsg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!event.notification || !event.notification.data || !event.notification.data[FCM_MSG]) {\n              // Not an FCM notification, do nothing.\n              return [2\n              /*return*/\n              ];\n            } else if (event.action) {\n              // User clicked on an action button.\n              // This will allow devs to act on action button clicks by using a custom\n              // onNotificationClick listener that they define.\n              return [2\n              /*return*/\n              ];\n            } // Prevent other listeners from receiving the event\n\n\n            event.stopImmediatePropagation();\n            event.notification.close();\n            msgPayload = event.notification.data[FCM_MSG];\n\n            if (!msgPayload.notification) {\n              // Nothing to do.\n              return [2\n              /*return*/\n              ];\n            }\n\n            link = msgPayload.fcmOptions && msgPayload.fcmOptions.link || msgPayload.notification.click_action;\n\n            if (!link) {\n              if (msgPayload.data && FN_CAMPAIGN_ID in msgPayload.data) {\n                link = self.location.origin;\n              } else {\n                // Nothing to do.\n                return [2\n                /*return*/\n                ];\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.getWindowClient_(link)];\n\n          case 1:\n            windowClient = _a.sent();\n            if (!!windowClient) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , self.clients.openWindow(link)];\n\n          case 2:\n            // Unable to find window client so need to open one.\n            windowClient = _a.sent(); // Wait three seconds for the client to initialize and set up the message\n            // handler so that it can receive the message.\n\n            return [4\n            /*yield*/\n            , sleep(3000)];\n\n          case 3:\n            // Wait three seconds for the client to initialize and set up the message\n            // handler so that it can receive the message.\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            return [4\n            /*yield*/\n            , windowClient.focus()];\n\n          case 5:\n            windowClient = _a.sent();\n            _a.label = 6;\n\n          case 6:\n            if (!windowClient) {\n              // Window Client will not be returned if it's for a third party origin.\n              return [2\n              /*return*/\n              ];\n            } // Delete notification and fcmOptions data from payload before sending to\n            // the page.\n\n\n            delete msgPayload.notification;\n            delete msgPayload.fcmOptions;\n            internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload); // Attempt to send a message to the client to handle the data\n            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\n\n            return [2\n            /*return*/\n            , this.attemptToMessageClient_(windowClient, internalMsg)];\n        }\n      });\n    });\n  }; // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.getNotificationData_ = function (msgPayload) {\n    var _a;\n\n    if (!msgPayload) {\n      return;\n    }\n\n    if (typeof msgPayload.notification !== 'object') {\n      return;\n    }\n\n    var notificationInformation = __assign({}, msgPayload.notification); // Put the message payload under FCM_MSG name so we can identify the\n    // notification as being an FCM notification vs a notification from\n    // somewhere else (i.e. normal web push or developer generated\n    // notification).\n\n\n    notificationInformation.data = __assign(__assign({}, msgPayload.notification.data), (_a = {}, _a[FCM_MSG] = msgPayload, _a));\n    return notificationInformation;\n  };\n  /**\r\n   * Calling setBackgroundMessageHandler will opt in to some specific\r\n   * behaviours.\r\n   * 1.) If a notification doesn't need to be shown due to a window already\r\n   * being visible, then push messages will be sent to the page.\r\n   * 2.) If a notification needs to be shown, and the message contains no\r\n   * notification data this method will be called\r\n   * and the promise it returns will be passed to event.waitUntil.\r\n   * If you do not set this callback then all push messages will let and the\r\n   * developer can handle them in a their own 'push' event callback\r\n   *\r\n   * @param callback The callback to be called when a push message is received\r\n   * and a notification must be shown. The callback will be given the data from\r\n   * the push message.\r\n   */\n\n\n  SwController.prototype.setBackgroundMessageHandler = function (callback) {\n    if (!callback || typeof callback !== 'function') {\n      throw errorFactory.create(\"bg-handler-function-expected\"\n      /* BG_HANDLER_FUNCTION_EXPECTED */\n      );\n    }\n\n    this.bgMessageHandler = callback;\n  };\n  /**\r\n   * @param url The URL to look for when focusing a client.\r\n   * @return Returns an existing window client or a newly opened WindowClient.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.getWindowClient_ = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsedURL, clientList, suitableClient, i, parsedClientUrl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            parsedURL = new URL(url, self.location.href).href;\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            suitableClient = null;\n\n            for (i = 0; i < clientList.length; i++) {\n              parsedClientUrl = new URL(clientList[i].url, self.location.href).href;\n\n              if (parsedClientUrl === parsedURL) {\n                suitableClient = clientList[i];\n                break;\n              }\n            }\n\n            return [2\n            /*return*/\n            , suitableClient];\n        }\n      });\n    });\n  };\n  /**\r\n   * This message will attempt to send the message to a window client.\r\n   * @param client The WindowClient to send the message to.\r\n   * @param message The message to send to the client.\r\n   * @returns Returns a promise that resolves after sending the message. This\r\n   * does not guarantee that the message was successfully received.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.attemptToMessageClient_ = function (client, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // NOTE: This returns a promise in case this API is abstracted later on to\n        // do additional work\n        if (!client) {\n          throw errorFactory.create(\"no-window-client-to-msg\"\n          /* NO_WINDOW_CLIENT_TO_MSG */\n          );\n        }\n\n        client.postMessage(message);\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * @returns If there is currently a visible WindowClient, this method will\r\n   * resolve to true, otherwise false.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.hasVisibleClients_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientList;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            return [2\n            /*return*/\n            , clientList.some(function (client) {\n              return client.visibilityState === 'visible' && // Ignore chrome-extension clients as that matches the background pages\n              // of extensions, which are always considered visible.\n              !client.url.startsWith('chrome-extension://');\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * @param msgPayload The data from the push event that should be sent to all\r\n   * available pages.\r\n   * @returns Returns a promise that resolves once the message has been sent to\r\n   * all WindowClients.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientList, internalMsg;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getClientList()];\n\n          case 1:\n            clientList = _a.sent();\n            internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\n            return [4\n            /*yield*/\n            , Promise.all(clientList.map(function (client) {\n              return _this.attemptToMessageClient_(client, internalMsg);\n            }))];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * This will register the default service worker and return the registration.\r\n   * @return he service worker registration to be used for the push service.\r\n   */\n\n\n  SwController.prototype.getSWRegistration_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , self.registration];\n      });\n    });\n  };\n  /**\r\n   * This will return the default VAPID key or the uint8array version of the\r\n   * public VAPID key provided by the developer.\r\n   */\n\n\n  SwController.prototype.getPublicVapidKey_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var swReg, vapidKeyFromDatabase;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getSWRegistration_()];\n\n          case 1:\n            swReg = _a.sent();\n\n            if (!swReg) {\n              throw errorFactory.create(\"sw-registration-expected\"\n              /* SW_REGISTRATION_EXPECTED */\n              );\n            }\n\n            return [4\n            /*yield*/\n            , this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\n\n          case 2:\n            vapidKeyFromDatabase = _a.sent();\n\n            if (vapidKeyFromDatabase == null) {\n              return [2\n              /*return*/\n              , DEFAULT_PUBLIC_VAPID_KEY];\n            }\n\n            return [2\n            /*return*/\n            , vapidKeyFromDatabase];\n        }\n      });\n    });\n  };\n\n  return SwController;\n}(BaseController);\n\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n\n  });\n}\n\nfunction createNewMsg(msgType, msgData) {\n  return {\n    firebaseMessagingType: msgType,\n    firebaseMessagingData: msgData\n  };\n}\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar WindowController =\n/** @class */\nfunction (_super) {\n  __extends(WindowController, _super);\n  /**\r\n   * A service that provides a MessagingService instance.\r\n   */\n\n\n  function WindowController(app) {\n    var _this = _super.call(this, app) || this;\n\n    _this.registrationToUse = null;\n    _this.publicVapidKeyToUse = null;\n    _this.messageObserver = null; // @ts-ignore: Unused variable error, this is not implemented yet.\n\n    _this.tokenRefreshObserver = null;\n    _this.onMessageInternal = createSubscribe(function (observer) {\n      _this.messageObserver = observer;\n    });\n    _this.onTokenRefreshInternal = createSubscribe(function (observer) {\n      _this.tokenRefreshObserver = observer;\n    });\n\n    _this.setupSWMessageListener_();\n\n    return _this;\n  }\n  /**\r\n   * Request permission if it is not currently granted\r\n   *\r\n   * @return Resolves if the permission was granted, otherwise rejects\r\n   *\r\n   * @deprecated Use Notification.requestPermission() instead.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n   */\n\n\n  WindowController.prototype.requestPermission = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var permissionResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.getNotificationPermission_() === 'granted') {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , Notification.requestPermission()];\n\n          case 1:\n            permissionResult = _a.sent();\n\n            if (permissionResult === 'granted') {\n              return [2\n              /*return*/\n              ];\n            } else if (permissionResult === 'denied') {\n              throw errorFactory.create(\"permission-blocked\"\n              /* PERMISSION_BLOCKED */\n              );\n            } else {\n              throw errorFactory.create(\"permission-default\"\n              /* PERMISSION_DEFAULT */\n              );\n            }\n\n        }\n      });\n    });\n  };\n  /**\r\n   * This method allows a developer to override the default service worker and\r\n   * instead use a custom service worker.\r\n   *\r\n   * @param registration The service worker registration that should be used to\r\n   * receive the push messages.\r\n   */\n\n\n  WindowController.prototype.useServiceWorker = function (registration) {\n    if (!(registration instanceof ServiceWorkerRegistration)) {\n      throw errorFactory.create(\"sw-registration-expected\"\n      /* SW_REGISTRATION_EXPECTED */\n      );\n    }\n\n    if (this.registrationToUse != null) {\n      throw errorFactory.create(\"use-sw-before-get-token\"\n      /* USE_SW_BEFORE_GET_TOKEN */\n      );\n    }\n\n    this.registrationToUse = registration;\n  };\n  /**\r\n   * This method allows a developer to override the default vapid key\r\n   * and instead use a custom VAPID public key.\r\n   *\r\n   * @param publicKey A URL safe base64 encoded string.\r\n   */\n\n\n  WindowController.prototype.usePublicVapidKey = function (publicKey) {\n    if (typeof publicKey !== 'string') {\n      throw errorFactory.create(\"invalid-public-vapid-key\"\n      /* INVALID_PUBLIC_VAPID_KEY */\n      );\n    }\n\n    if (this.publicVapidKeyToUse != null) {\n      throw errorFactory.create(\"use-public-key-before-get-token\"\n      /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */\n      );\n    }\n\n    var parsedKey = base64ToArrayBuffer(publicKey);\n\n    if (parsedKey.length !== 65) {\n      throw errorFactory.create(\"public-vapid-key-decryption-failed\"\n      /* PUBLIC_KEY_DECRYPTION_FAILED */\n      );\n    }\n\n    this.publicVapidKeyToUse = parsedKey;\n  };\n  /**\r\n   * @export\r\n   * @param nextOrObserver An observer object or a function triggered on\r\n   * message.\r\n   * @param error A function triggered on message error.\r\n   * @param completed function triggered when the observer is removed.\r\n   * @return The unsubscribe function for the observer.\r\n   */\n\n\n  WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\n    if (typeof nextOrObserver === 'function') {\n      return this.onMessageInternal(nextOrObserver, error, completed);\n    } else {\n      return this.onMessageInternal(nextOrObserver);\n    }\n  };\n  /**\r\n   * @param nextOrObserver An observer object or a function triggered on token\r\n   * refresh.\r\n   * @param error A function triggered on token refresh error.\r\n   * @param completed function triggered when the observer is removed.\r\n   * @return The unsubscribe function for the observer.\r\n   */\n\n\n  WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\n    if (typeof nextOrObserver === 'function') {\n      return this.onTokenRefreshInternal(nextOrObserver, error, completed);\n    } else {\n      return this.onTokenRefreshInternal(nextOrObserver);\n    }\n  };\n  /**\r\n   * Given a registration, wait for the service worker it relates to\r\n   * become activer\r\n   * @param registration Registration to wait for service worker to become active\r\n   * @return Wait for service worker registration to become active\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\n    var serviceWorker = registration.installing || registration.waiting || registration.active;\n    return new Promise(function (resolve, reject) {\n      if (!serviceWorker) {\n        // This is a rare scenario but has occured in firefox\n        reject(errorFactory.create(\"no-sw-in-reg\"\n        /* NO_SW_IN_REG */\n        ));\n        return;\n      } // Because the Promise function is called on next tick there is a\n      // small chance that the worker became active or redundant already.\n\n\n      if (serviceWorker.state === 'activated') {\n        resolve(registration);\n        return;\n      }\n\n      if (serviceWorker.state === 'redundant') {\n        reject(errorFactory.create(\"sw-reg-redundant\"\n        /* SW_REG_REDUNDANT */\n        ));\n        return;\n      }\n\n      var stateChangeListener = function () {\n        if (serviceWorker.state === 'activated') {\n          resolve(registration);\n        } else if (serviceWorker.state === 'redundant') {\n          reject(errorFactory.create(\"sw-reg-redundant\"\n          /* SW_REG_REDUNDANT */\n          ));\n        } else {\n          // Return early and wait to next state change\n          return;\n        }\n\n        serviceWorker.removeEventListener('statechange', stateChangeListener);\n      };\n\n      serviceWorker.addEventListener('statechange', stateChangeListener);\n    });\n  };\n  /**\r\n   * This will register the default service worker and return the registration\r\n   * @return The service worker registration to be used for the push service.\r\n   */\n\n\n  WindowController.prototype.getSWRegistration_ = function () {\n    var _this = this;\n\n    if (this.registrationToUse) {\n      return this.waitForRegistrationToActivate_(this.registrationToUse);\n    } // Make the registration null so we know useServiceWorker will not\n    // use a new service worker as registrationToUse is no longer undefined\n\n\n    this.registrationToUse = null;\n    return navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n      scope: DEFAULT_SW_SCOPE\n    }).catch(function (err) {\n      throw errorFactory.create(\"failed-serviceworker-registration\"\n      /* FAILED_DEFAULT_REGISTRATION */\n      , {\n        browserErrorMessage: err.message\n      });\n    }).then(function (registration) {\n      return _this.waitForRegistrationToActivate_(registration).then(function () {\n        _this.registrationToUse = registration; // We update after activation due to an issue with Firefox v49 where\n        // a race condition occassionally causes the service worker to not\n        // install\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n        registration.update();\n        return registration;\n      });\n    });\n  };\n  /**\r\n   * This will return the default VAPID key or the uint8array version of the\r\n   * public VAPID key provided by the developer.\r\n   */\n\n\n  WindowController.prototype.getPublicVapidKey_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.publicVapidKeyToUse) {\n          return [2\n          /*return*/\n          , this.publicVapidKeyToUse];\n        }\n\n        return [2\n        /*return*/\n        , DEFAULT_PUBLIC_VAPID_KEY];\n      });\n    });\n  };\n  /**\r\n   * This method will set up a message listener to handle\r\n   * events from the service worker that should trigger\r\n   * events in the page.\r\n   */\n  // Visible for testing\n  // TODO: Make private\n\n\n  WindowController.prototype.setupSWMessageListener_ = function () {\n    var _this = this;\n\n    navigator.serviceWorker.addEventListener('message', function (event) {\n      if (!event.data || !event.data.firebaseMessagingType || !event.data.firebaseMessagingData) {\n        // Not a message from FCM\n        return;\n      }\n\n      var _a = event.data,\n          firebaseMessagingType = _a.firebaseMessagingType,\n          firebaseMessagingData = _a.firebaseMessagingData;\n\n      if (_this.messageObserver) {\n        _this.messageObserver.next(firebaseMessagingData);\n      }\n\n      var data = firebaseMessagingData.data;\n\n      if (data && FN_CAMPAIGN_ID in data && data[FN_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\n        // This message has a campaign id, meaning it was sent using the FN Console.\n        // Analytics is enabled on this message, so we should log it.\n        var eventType = getEventType(firebaseMessagingType);\n\n        _this.app.INTERNAL.analytics.logEvent(eventType,\n        /* eslint-disable camelcase */\n        {\n          message_name: data[FN_CAMPAIGN_NAME],\n          message_id: data[FN_CAMPAIGN_ID],\n          message_time: data[FN_CAMPAIGN_TIME],\n          message_device_time: Math.floor(Date.now() / 1000)\n        }\n        /* eslint-enable camelcase */\n        );\n      }\n    }, false);\n  };\n\n  return WindowController;\n}(BaseController);\n\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n\n    case MessageType.PUSH_MSG_RECEIVED:\n      return 'notification_foreground';\n\n    default:\n      throw new Error();\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerMessaging(instance) {\n  var messagingName = 'messaging';\n\n  var factoryMethod = function (app) {\n    if (!isSupported()) {\n      throw errorFactory.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n\n    if (self && 'ServiceWorkerGlobalScope' in self) {\n      // Running in ServiceWorker context\n      return new SwController(app);\n    } else {\n      // Assume we are in the window context.\n      return new WindowController(app);\n    }\n  };\n\n  var namespaceExports = {\n    isSupported: isSupported\n  };\n  instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\n}\n\nregisterMessaging(firebase);\n\nfunction isSupported() {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n/**\r\n * Checks to see if the required APIs exist.\r\n */\n\n\nfunction isWindowControllerSupported() {\n  return navigator.cookieEnabled && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\n\n\nfunction isSWControllerSupported() {\n  return 'PushManager' in self && 'Notification' in self && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n\nexport { isSupported, registerMessaging };","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@firebase/messaging/dist/index.esm.js"],"names":["firebase","__spread","__awaiter","__generator","__extends","__assign","ErrorFactory","createSubscribe","_a","ERROR_MAP","errorFactory","DEFAULT_PUBLIC_VAPID_KEY","Uint8Array","ENDPOINT","FN_CAMPAIGN_ID","FN_CAMPAIGN_NAME","FN_CAMPAIGN_TIME","FN_CAMPAIGN_ANALYTICS_ENABLED","MessageType","isArrayBufferEqual","a","b","byteLength","viewA","DataView","viewB","i","getUint8","toBase64","arrayBuffer","uint8Version","btoa","String","fromCharCode","apply","arrayBufferToBase64","base64String","replace","SubscriptionManager","prototype","getToken","app","subscription","vapidKey","headers","body","subscribeOptions","responseData","response","err_1","message","label","getHeaders","sent","getBody","method","JSON","stringify","trys","push","fetch","getEndpoint","json","create","errorInfo","error","token","updateToken","tokenDetails","updateOptions","err_2","fcmToken","deleteToken","unsubscribeOptions","err_3","options","projectId","installations","authToken","Headers","Accept","apiKey","p256dh","getKey","auth","web","endpoint","buffer","applicationPubKey","base64ToArrayBuffer","padding","repeat","length","base64","rawData","atob","outputArray","charCodeAt","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","handleDb","db","objectStoreNames","contains","transaction","objectStore","subscriptionManager","openCursorRequest","openCursor","onerror","event","console","warn","onsuccess","cursor","result","value","continue","close","indexedDB","deleteDatabase","cleanV1","request","open","_event","DbInterface","dbPromise","get","key","createTransaction","getIndex","index","runRequest","idbIndex","put","delete","closeDatabase","mode","getDb","objectStoreName","promisify","Promise","resolve","reject","oncomplete","_this","dbName","dbVersion","onupgradeneeded","onDbUpgrade","TokenDetailsModel","_super","call","oldVersion","createObjectStore","keyPath","createIndex","unique","cursorRequest_1","newValue","createTime","Date","now","fcmPushSet","update","cursorRequest_2","getTokenDetailsFromToken","validateInputs","getTokenDetailsFromSWScope","swScope","saveTokenDetails","fcmSenderId","details","input","ArrayBuffer","UNCOMPRESSED_PUBLIC_KEY_SIZE","VapidDetailsModel","arguments","getVapidFromSWScope","undefined","saveVapidDetails","deleteVapidDetails","TOKEN_EXPIRATION_MILLIS","BaseController","vapidDetailsModel","messagingSenderId","INTERNAL","tokenDetailsModel","currentPermission","swReg","publicVapidKey","pushSubscription","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","scope","manageExistingToken","getNewToken","isTokenValid","isTokenStillValid","deleteTokenFromDB","updatedToken","allDetails","e_1","newToken","registration","pushManager","getSubscription","unsubscribe","swRegistration","subscribe","userVisibleOnly","applicationServerKey","requestPermission","useServiceWorker","_registration","usePublicVapidKey","_b64PublicKey","onMessage","_nextOrObserver","_error","_completed","onTokenRefresh","setBackgroundMessageHandler","_callback","all","Notification","permission","getTokenDetailsModel","getVapidDetailsModel","getSubscriptionManager","isEndpointEqual","isAuthEqual","isP256dhEqual","FCM_MSG","SwController","bgMessageHandler","self","addEventListener","e","onPush","onSubChange","onNotificationClick","waitUntil","onPush_","onSubChange_","onNotificationClick_","msgPayload","hasVisibleClients","notificationDetails","notificationTitle","reg","actions","maxActions","data","err","hasVisibleClients_","sendMessageToWindowClients_","getNotificationData_","title","showNotification","link","windowClient","internalMsg","notification","action","stopImmediatePropagation","fcmOptions","click_action","location","origin","getWindowClient_","clients","openWindow","sleep","focus","createNewMsg","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","callback","url","parsedURL","clientList","suitableClient","parsedClientUrl","URL","href","getClientList","client","postMessage","some","visibilityState","startsWith","PUSH_MSG_RECEIVED","map","vapidKeyFromDatabase","matchAll","type","includeUncontrolled","msgType","msgData","firebaseMessagingType","firebaseMessagingData","ms","setTimeout","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","WindowController","registrationToUse","publicVapidKeyToUse","messageObserver","tokenRefreshObserver","onMessageInternal","observer","onTokenRefreshInternal","setupSWMessageListener_","permissionResult","ServiceWorkerRegistration","publicKey","parsedKey","nextOrObserver","completed","waitForRegistrationToActivate_","serviceWorker","installing","waiting","active","state","stateChangeListener","removeEventListener","navigator","register","catch","browserErrorMessage","then","next","eventType","getEventType","analytics","logEvent","message_name","message_id","message_time","message_device_time","Math","floor","messageType","Error","registerMessaging","instance","messagingName","factoryMethod","isSupported","namespaceExports","registerService","isSWControllerSupported","isWindowControllerSupported","cookieEnabled","window","hasOwnProperty","PushSubscription"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\nimport '@firebase/installations';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"should-be-overriden\" /* SHOULD_BE_INHERITED */] = 'This method should be overriden by extended classes.',\r\n    _a[\"bad-sender-id\" /* BAD_SENDER_ID */] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The required permissions were not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The required permissions were not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.',\r\n    _a[\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */] = 'Notifications have been blocked.',\r\n    _a[\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}',\r\n    _a[\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */] = 'A service worker registration was the expected input.',\r\n    _a[\"get-subscription-failed\" /* GET_SUBSCRIPTION_FAILED */] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.',\r\n    _a[\"invalid-saved-token\" /* INVALID_SAVED_TOKEN */] = 'Unable to access details of the saved token.',\r\n    _a[\"sw-reg-redundant\" /* SW_REG_REDUNDANT */] = 'The service worker being used for push was made redundant.',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().',\r\n    _a[\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.',\r\n    _a[\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.',\r\n    _a[\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */] = 'An attempt was made to message a non-existant window client.',\r\n    _a[\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$errorInfo}',\r\n    _a[\"no-fcm-token-for-resubscribe\" /* NO_FCM_TOKEN_FOR_RESUBSCRIBE */] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.',\r\n    _a[\"failed-to-delete-token\" /* FAILED_TO_DELETE_TOKEN */] = 'Unable to delete the currently saved token.',\r\n    _a[\"no-sw-in-reg\" /* NO_SW_IN_REG */] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.',\r\n    _a[\"bad-scope\" /* BAD_SCOPE */] = 'The service worker scope must be a string with at ' +\r\n        'least one character.',\r\n    _a[\"bad-vapid-key\" /* BAD_VAPID_KEY */] = 'The public VAPID key is not a Uint8Array with 65 bytes.',\r\n    _a[\"bad-subscription\" /* BAD_SUBSCRIPTION */] = 'The subscription must be a valid PushSubscription.',\r\n    _a[\"bad-token\" /* BAD_TOKEN */] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.',\r\n    _a[\"failed-delete-vapid-key\" /* FAILED_DELETE_VAPID_KEY */] = 'The VAPID key could not be deleted.',\r\n    _a[\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a[\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */] = 'The public VAPID key did not equal 65 bytes when decrypted.',\r\n    _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\nvar FN_CAMPAIGN_ID = 'google.c.a.c_id';\r\nvar FN_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nvar FN_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nvar FN_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SubscriptionManager = /** @class */ (function () {\r\n    function SubscriptionManager() {\r\n    }\r\n    SubscriptionManager.prototype.getToken = function (app, subscription, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, body, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(app)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        body = getBody(subscription, vapidKey);\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(body)\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(app), subscribeOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 6:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    SubscriptionManager.prototype.updateToken = function (tokenDetails, app, subscription, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, body, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(app)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        body = getBody(subscription, vapidKey);\r\n                        updateOptions = {\r\n                            method: 'PATCH',\r\n                            headers: headers,\r\n                            body: JSON.stringify(body)\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(app) + \"/\" + tokenDetails.fcmToken, updateOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: err_2\r\n                        });\r\n                    case 6:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SubscriptionManager.prototype.deleteToken = function (app, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(app)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        unsubscribeOptions = {\r\n                            method: 'DELETE',\r\n                            headers: headers\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(app) + \"/\" + tokenDetails.fcmToken, unsubscribeOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_3\r\n                        });\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SubscriptionManager;\r\n}());\r\nfunction getEndpoint(app) {\r\n    return ENDPOINT + \"/projects/\" + app.options.projectId + \"/registrations\";\r\n}\r\nfunction getHeaders(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var installations, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    installations = app.installations();\r\n                    return [4 /*yield*/, installations.getToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'application/json',\r\n                            'x-goog-api-key': app.options.apiKey,\r\n                            'x-goog-firebase-installations-auth': \"FIS \" + authToken\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getBody(subscription, vapidKey) {\r\n    var p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n    var auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n    var body = {\r\n        web: {\r\n            endpoint: subscription.endpoint,\r\n            p256dh: p256dh,\r\n            auth: auth\r\n        }\r\n    };\r\n    if (!isArrayBufferEqual(vapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n        body.web.applicationPubKey = arrayBufferToBase64(vapidKey);\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db, app) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var subscriptionManager = new SubscriptionManager();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            subscriptionManager.deleteToken(app, tokenDetails);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1(app) {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (_event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (_event) {\r\n        var db = request.result;\r\n        handleDb(db, app);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel(app) {\r\n        var _this = _super.call(this) || this;\r\n        _this.app = app;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 4;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1(this.app);\r\n            }\r\n            case 2: {\r\n                // Update from v2 to v4 directly in a single openCursor request.\r\n                // We need to do this because for some reason, doing a subsequent update on the same data\r\n                // in the same transaction drops the first update.\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        if (typeof value.fcmPushSet === 'string') {\r\n                            delete newValue.fcmPushSet;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n                // Break here as we've already updated to v4.\r\n                break;\r\n            }\r\n            case 3: {\r\n                // Update from V3 to V4.\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_2 = objectStore.openCursor();\r\n                cursorRequest_2.onsuccess = function () {\r\n                    var cursor = cursorRequest_2.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (typeof value.fcmPushSet === 'string') {\r\n                            delete newValue.fcmPushSet;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Token should be refreshed once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    function BaseController(app) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.subscriptionManager = new SubscriptionManager();\r\n        if (!app.options.messagingSenderId ||\r\n            typeof app.options.messagingSenderId !== 'string') {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n        this.tokenDetailsModel = new TokenDetailsModel(app);\r\n    }\r\n    BaseController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission === 'denied') {\r\n                            throw errorFactory.create(\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */);\r\n                        }\r\n                        else if (currentPermission !== 'granted') {\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (!isTokenValid) return [3 /*break*/, 1];\r\n                        now = Date.now();\r\n                        if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                            return [2 /*return*/, tokenDetails.fcmToken];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                    case 1: \r\n                    // If the token is no longer valid (for example if the VAPID details\r\n                    // have changed), delete the existing token from the FCM client and server\r\n                    // database. No need to unsubscribe from the Service Worker as we have a\r\n                    // good push subscription that we'd like to use in getNewToken.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 2:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.subscriptionManager.updateToken(tokenDetails, this.app, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.app.options.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newToken, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.subscriptionManager.getToken(this.app, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        newToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.app.options.messagingSenderId,\r\n                            fcmToken: newToken,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, newToken];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        return [4 /*yield*/, this.subscriptionManager.deleteToken(this.app, tokenDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var subscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                    case 1:\r\n                        subscription = _a.sent();\r\n                        if (subscription) {\r\n                            return [2 /*return*/, subscription];\r\n                        }\r\n                        return [2 /*return*/, swRegistration.pushManager.subscribe({\r\n                                userVisibleOnly: true,\r\n                                applicationServerKey: publicVapidKey\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    /**\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (_registration) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\r\n        throw errorFactory.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission_ = function () {\r\n        return Notification.permission;\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getSubscriptionManager = function () {\r\n        return this.subscriptionManager;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    __extends(SwController, _super);\r\n    function SwController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (_event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, link, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        link = (msgPayload.fcmOptions && msgPayload.fcmOptions.link) ||\r\n                            msgPayload.notification.click_action;\r\n                        if (!link) {\r\n                            if (msgPayload.data && FN_CAMPAIGN_ID in msgPayload.data) {\r\n                                link = self.location.origin;\r\n                            }\r\n                            else {\r\n                                // Nothing to do.\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(link)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        return [4 /*yield*/, sleep(3000)];\r\n                    case 3:\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4: return [4 /*yield*/, windowClient.focus()];\r\n                    case 5:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification and fcmOptions data from payload before sending to\r\n                        // the page.\r\n                        delete msgPayload.notification;\r\n                        delete msgPayload.fcmOptions;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        var _a;\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = __assign(__assign({}, msgPayload.notification.data), (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) {\r\n                                return client.visibilityState === 'visible' &&\r\n                                    // Ignore chrome-extension clients as that matches the background pages\r\n                                    // of extensions, which are always considered visible.\r\n                                    !client.url.startsWith('chrome-extension://');\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList, internalMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    return {\r\n        firebaseMessagingType: msgType,\r\n        firebaseMessagingData: msgData\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.getNotificationPermission_() === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(\"no-sw-in-reg\" /* NO_SW_IN_REG */));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service worker to not\r\n                // install\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data ||\r\n                !event.data.firebaseMessagingType ||\r\n                !event.data.firebaseMessagingData) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var _a = event.data, firebaseMessagingType = _a.firebaseMessagingType, firebaseMessagingData = _a.firebaseMessagingData;\r\n            if (_this.messageObserver) {\r\n                _this.messageObserver.next(firebaseMessagingData);\r\n            }\r\n            var data = firebaseMessagingData.data;\r\n            if (data &&\r\n                FN_CAMPAIGN_ID in data &&\r\n                data[FN_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\r\n                // This message has a campaign id, meaning it was sent using the FN Console.\r\n                // Analytics is enabled on this message, so we should log it.\r\n                var eventType = getEventType(firebaseMessagingType);\r\n                _this.app.INTERNAL.analytics.logEvent(eventType, \r\n                /* eslint-disable camelcase */\r\n                {\r\n                    message_name: data[FN_CAMPAIGN_NAME],\r\n                    message_id: data[FN_CAMPAIGN_ID],\r\n                    message_time: data[FN_CAMPAIGN_TIME],\r\n                    message_device_time: Math.floor(Date.now() / 1000)\r\n                }\r\n                /* eslint-enable camelcase */\r\n                );\r\n            }\r\n        }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_MSG_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(app);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(app);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return (navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexport { isSupported, registerMessaging };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}