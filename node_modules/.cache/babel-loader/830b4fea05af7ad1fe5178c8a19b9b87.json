{"ast":null,"code":"/******************************************************************************\n *  @Purpose        : to build complete fundooNotes App\n *  @file           : userController.js\n *  @author         : GIRISH B R\n *  @since          : 27-11-2019\n *******************************************************************************/\nimport jwt from 'jsonwebtoken';\nimport jwt_decode from 'jwt-decode';\nimport { EventEmitter } from 'events';\nimport servicesConstant from '../const.js';\n/*\n* @Purpose :Register the validated user details\n*/\n\nexport async function register(req) {\n  try {\n    const data = {\n      email: req.email,\n      password: req.password,\n      firstname: req.firstname,\n      lastname: req.lastname\n    };\n    const details = await servicesConstant.firebaseAuthorization.createUserWithEmailAndPassword(req.email, data.password);\n    servicesConstant.firestore.collection('user').doc(details.user.uid).set(data);\n    const emitter = new EventEmitter();\n\n    function emailVerification() {\n      servicesConstant.firebaseAuthorization.currentUser.sendEmailVerification();\n    }\n\n    emitter.on('email verification', emailVerification);\n    const result = emitter.emit('email verification');\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\nexport async function login(req) {\n  try {\n    let loginDetails = await servicesConstant.firebaseAuthorization.signInWithEmailAndPassword(req.email, req.password);\n    let data = await servicesConstant.firestore.collection(\"user\").doc(loginDetails.user.uid);\n    console.log(data);\n    await data.get().then(function (doc) {\n      const payload = {\n        email: servicesConstant.firebaseAuthorization.currentUser.email,\n        firstname: doc.data().firstname,\n        lastname: doc.data().lastname,\n        user_id: loginDetails.user.uid\n      };\n      let token = jwt.sign(payload, servicesConstant.firebaseAuthorization.currentUser.uid, {\n        expiresIn: 1440\n      });\n      localStorage.setItem('usertoken', token); //console.log(JSON.stringify(userData))\n    });\n    return loginDetails;\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\n/*\n* @Purpose :Sending the reset password link to the mail\n*/\n\nexport async function forgotpassword(email) {\n  try {\n    await servicesConstant.firebaseAuthorization.sendPasswordResetEmail(email);\n    return 'success';\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\n/*\n* @Purpose :Sign out of the user\n*/\n\nexport async function logout() {\n  try {\n    await servicesConstant.firebaseAuthorization.signOut();\n    localStorage.removeItem('usertoken');\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function CreateNote(notes) {\n  try {\n    console.log(notes);\n    const Notesdetails = {\n      title: notes.title,\n      description: notes.description,\n      color: notes.color,\n      archive: notes.archive,\n      pin: notes.pin,\n      user_id: servicesConstant.firebaseAuthorization.currentUser.uid,\n      reminder: notes.reminder\n    };\n    await servicesConstant.firestore.collection('notes').doc().set(Notesdetails);\n    return 'success';\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\nexport async function GetNote() {\n  try {\n    const token = localStorage.usertoken;\n    const decodedJwt = jwt_decode(token);\n    var notes = [];\n    await servicesConstant.firestore.collection(\"notes\").where(\"user_id\", \"==\", decodedJwt.user_id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        notes.push(doc);\n      });\n    });\n    console.log(notes);\n    return notes;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function noteUpdate(data) {\n  console.log();\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"title\": data.title,\n    \"description\": data.description,\n    \"id\": data.id,\n    \"color\": data.color,\n    \"archive\": data.archive,\n    \"pin\": data.pin,\n    \"reminder\": data.reminder\n  }).then(res => {\n    res = true;\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport default async function DeleteNote(data) {\n  await servicesConstant.firestore.collection(\"notes\").doc(data.doc_id).delete().then(res => {\n    res = true;\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport async function archiveData(data) {\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"archive\": data.archive,\n    \"pin\": data.pin\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport async function notePinned(data) {\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"pin\": data.pin\n  }).then(res => {\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport async function ReminderUpdate(data) {\n  console.log();\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"reminder\": data.reminder\n  }).then(res => {\n    res = true;\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport async function colorUpdate(data) {\n  console.log();\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"color\": data.color\n  }).then(res => {\n    res = true;\n    return res;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport async function createLabel(labelData) {\n  try {\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n    const dataOfLabel = {\n      label: labelData.labelData,\n      isDeleted: false,\n      note_id: null,\n      user_id: decoded.user_id\n    };\n    await servicesConstant.firestore.collection('labels').doc().set(dataOfLabel);\n    var labels = [];\n    await servicesConstant.firestore.collection(\"labels\").where(\"user_id\", \"==\", decoded.user_id).where(\"note_id\", \"==\", null).where(\"isDeleted\", \"==\", false).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        labels.push(doc);\n      });\n    });\n    console.log(labels);\n    return labels;\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\nexport async function getAllLabels() {\n  try {\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n    var labels = [];\n    await servicesConstant.firestore.collection(\"labels\").where(\"user_id\", \"==\", decoded.user_id).where(\"isDeleted\", \"==\", false).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        labels.push(doc);\n      });\n    });\n    return labels;\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/controller/userController.js"],"names":["jwt","jwt_decode","EventEmitter","servicesConstant","register","req","data","email","password","firstname","lastname","details","firebaseAuthorization","createUserWithEmailAndPassword","firestore","collection","doc","user","uid","set","emitter","emailVerification","currentUser","sendEmailVerification","on","result","emit","error","console","log","message","login","loginDetails","signInWithEmailAndPassword","get","then","payload","user_id","token","sign","expiresIn","localStorage","setItem","forgotpassword","sendPasswordResetEmail","logout","signOut","removeItem","err","CreateNote","notes","Notesdetails","title","description","color","archive","pin","reminder","GetNote","usertoken","decodedJwt","where","querySnapshot","forEach","push","noteUpdate","id","update","res","catch","DeleteNote","doc_id","delete","archiveData","notePinned","ReminderUpdate","colorUpdate","createLabel","labelData","decoded","dataOfLabel","label","isDeleted","note_id","labels","getAllLabels"],"mappings":"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","sourcesContent":["/******************************************************************************\n *  @Purpose        : to build complete fundooNotes App\n *  @file           : userController.js\n *  @author         : GIRISH B R\n *  @since          : 27-11-2019\n *******************************************************************************/\nimport jwt from 'jsonwebtoken';\nimport jwt_decode from 'jwt-decode'\nimport { EventEmitter } from 'events';\nimport servicesConstant from '../const.js';\n/*\n* @Purpose :Register the validated user details\n*/\nexport async function register(req) {\n  try {\n    const data = {\n      email: req.email,\n      password: req.password,\n      firstname: req.firstname,\n      lastname: req.lastname\n    }\nconst details=await servicesConstant.firebaseAuthorization.createUserWithEmailAndPassword(req.email, data.password)\n servicesConstant.firestore.collection('user').doc(details.user.uid).set(data)\n const emitter = new EventEmitter();\n    function emailVerification() {\n      servicesConstant.firebaseAuthorization.currentUser.sendEmailVerification()\n    }\n    emitter.on('email verification', emailVerification);\n    const result=emitter.emit('email verification');\n    return result;\n  }\n  catch (error) {\n    console.log(error)\n    return error.message\n  }\n}\nexport async function login(req){\n  try {\n    let loginDetails = await servicesConstant.firebaseAuthorization.signInWithEmailAndPassword(req.email, req.password);\n   \n    let data = await servicesConstant.firestore.collection(\"user\").doc(loginDetails.user.uid)\n   console.log(data)\n  await data.get().then(function (doc) {\n      const payload = {\n        email: servicesConstant.firebaseAuthorization.currentUser.email,\n        firstname: doc.data().firstname,\n        lastname: doc.data().lastname,\n        user_id:loginDetails.user.uid\n      }\n      let token = jwt.sign(payload, servicesConstant.firebaseAuthorization.currentUser.uid, {\n        expiresIn: 1440\n      })\n      localStorage.setItem('usertoken', token)\n      //console.log(JSON.stringify(userData))\n     \n    })\n    return loginDetails\n  }\n  catch (error) {\n    console.log(error);\n    return error.message;\n  }\n}\n/*\n* @Purpose :Sending the reset password link to the mail\n*/\nexport async function forgotpassword(email) {\n  try {\n    await servicesConstant.firebaseAuthorization.sendPasswordResetEmail(email)\n    return 'success';\n  }\n  catch (error) {\n    console.log(error)\n    return error.message;\n  }\n}\n/*\n* @Purpose :Sign out of the user\n*/\nexport async function logout(){\n try{\n  await servicesConstant.firebaseAuthorization.signOut();\n  localStorage.removeItem('usertoken')\n  }\n  catch(err){\n    console.log(err);\n  }\n}\nexport async function CreateNote(notes) {\n  try {\n    console.log(notes)\n    const Notesdetails={\n      title:notes.title,\n      description:notes.description,\n      color:notes.color,\n      archive:notes.archive,\n      pin:notes.pin,\n      user_id:servicesConstant.firebaseAuthorization.currentUser.uid,\n      reminder:notes.reminder\n    }\n   await servicesConstant.firestore.collection('notes').doc().set(Notesdetails)\n    return 'success';\n  }\n  catch (error) {\n    console.log(error)\n    return error.message;\n  }\n}\nexport  async function GetNote(){\n  try{\n    const token=localStorage.usertoken\n    const decodedJwt=jwt_decode(token)\n    var notes=[];\n    await servicesConstant.firestore.collection(\"notes\").where(\"user_id\",\"==\", decodedJwt.user_id)\n    .get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc){\n        notes.push(doc)\n      });\n      })\nconsole.log(notes);\nreturn(notes)\n  }\n  catch(error){\n    return error.message\n  }\n}\nexport async function noteUpdate(data){\n  console.log()\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"title\":data.title,\n    \"description\":data.description,\n    \"id\":data.id,\n    \"color\":data.color,\n    \"archive\":data.archive,\n    \"pin\":data.pin,\n    \"reminder\":data.reminder\n    \n })\n.then(res=>{\n  res=true;\n  return res\n})\n.catch(error=>{\n  return error.message\n})\n}\nexport default async function DeleteNote(data){\nawait servicesConstant.firestore.collection(\"notes\").doc(data.doc_id).delete()\n.then(res=>{\n  res=true;\n  return res\n})\n.catch(error=>{\nreturn error.message\n})\n}\nexport async function archiveData(data){\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n   \"archive\":data.archive,\n   \"pin\":data.pin\n}).then(res=>{\n return res\n}).catch(error=>{\n return error.message\n})\n}\nexport async function notePinned(data){\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n   \"pin\":data.pin\n}).then(res=>{\n return res\n}).catch(error=>{\n return error.message\n})\n}\nexport async function ReminderUpdate(data){\n  console.log()\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"reminder\":data.reminder\n    })\n.then(res=>{\n  res=true;\n  return res\n})\n.catch(error=>{\n  return error.message\n})\n}\nexport async function colorUpdate(data){\n  console.log()\n  await servicesConstant.firestore.collection(\"notes\").doc(data.id).update({\n    \"color\":data.color\n    })\n.then(res=>{\n  res=true;\n  return res\n})\n.catch(error=>{\n  return error.message\n})\n}\nexport async function createLabel(labelData) {\n  try{\n  const token = localStorage.usertoken\n  const decoded = jwt_decode(token)\n  const dataOfLabel = {\n    label: labelData.labelData,\n    isDeleted: false,\n    note_id: null,\n    user_id:decoded.user_id\n  }\n    await servicesConstant.firestore.collection('labels').doc().set(dataOfLabel)\n    var labels = [];\n  await servicesConstant.firestore.collection(\"labels\")\n      .where(\"user_id\", \"==\", decoded.user_id)\n      .where(\"note_id\", \"==\", null)\n      .where(\"isDeleted\",\"==\",false)\n      .get().then(function(querySnapshot) {\n         querySnapshot.forEach(function(doc) {\n           labels.push(doc)\n        });\n    })\n    console.log(labels)\n    return labels\n  }\n  catch (error) {\n    console.log(error)\n    return error.message\n  }\n}\nexport async function getAllLabels(){\n  try{\n   const token = localStorage.usertoken\n const decoded = jwt_decode(token)\n var labels = [];\n await servicesConstant.firestore.collection(\"labels\")\n     .where(\"user_id\", \"==\", decoded.user_id)\n     .where(\"isDeleted\",\"==\",false)\n     .get().then(function(querySnapshot) {\n        querySnapshot.forEach(function(doc) {\n          labels.push(doc)\n       });\n   })\n   return labels\n }\n catch (error) {\n   console.log(error)\n   return error.message\n }\n}\n"]},"metadata":{},"sourceType":"module"}