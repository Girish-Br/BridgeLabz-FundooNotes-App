{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\n\nvar MIN_SAFE_INTEGER = -9007199254740991;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      return this.message_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var path = '(/([^?#]*).*)?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\n    var httpIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: httpRegex,\n      indices: httpIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, authWrapper) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(authWrapper, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(authWrapper, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  var bucket = authWrapper.bucket();\n\n  if (bucket === null) {\n    throw noDefaultBucket();\n  }\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(authWrapper, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(authWrapper, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(authWrapper) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(authWrapper, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(authWrapper, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.authWrapper_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(authWrapper, location) {\n    this.authWrapper = authWrapper;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (authWrapper, location) {\n    return new Reference(authWrapper, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.authWrapper.service();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.authWrapper, _this.location);\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.authWrapper, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map = new Map();\n    this.id = MIN_SAFE_INTEGER;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   *\r\n   * @param request The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (request) {\n    var _this = this;\n\n    var id = this.id;\n    this.id++;\n    this.map.set(id, request);\n    request.getPromise().then(function () {\n      return _this.map.delete(id);\n    }, function () {\n      return _this.map.delete(id);\n    });\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    this.map.forEach(function (v) {\n      v && v.cancel(true);\n    });\n    this.map.clear();\n  };\n\n  return RequestMap;\n}();\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\n\n\nvar AuthWrapper =\n/** @class */\nfunction () {\n  function AuthWrapper(app, maker, requestMaker, service, pool) {\n    this.bucket_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n\n    if (this.app_ !== null) {\n      var options = this.app_.options;\n\n      if (isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  AuthWrapper.extractBucket_ = function (config) {\n    var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    var loc = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  };\n\n  AuthWrapper.prototype.getAuthToken = function () {\n    // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n    // (b/28673818).\n    if (this.app_ !== null && isDef(this.app_.INTERNAL) && isDef(this.app_.INTERNAL.getToken)) {\n      return this.app_.INTERNAL.getToken().then(function (response) {\n        if (response !== null) {\n          return response.accessToken;\n        } else {\n          return null;\n        }\n      }, function () {\n        return null;\n      });\n    } else {\n      return Promise.resolve(null);\n    }\n  };\n\n  AuthWrapper.prototype.bucket = function () {\n    if (this.deleted_) {\n      throw appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  };\n  /**\r\n   * The service associated with this auth wrapper. Untyped to avoid circular\r\n   * type dependencies.\r\n   */\n\n\n  AuthWrapper.prototype.service = function () {\n    return this.service_;\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return Actually a firebaseStorage.Reference, typing not allowed\r\n   *     because of circular dependency problems.\r\n   */\n\n\n  AuthWrapper.prototype.makeStorageReference = function (loc) {\n    return this.storageRefMaker_(this, loc);\n  };\n\n  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n    if (!this.deleted_) {\n      var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  AuthWrapper.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  };\n\n  AuthWrapper.prototype.maxUploadRetryTime = function () {\n    return this.maxUploadRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n    this.maxUploadRetryTime_ = time;\n  };\n\n  AuthWrapper.prototype.maxOperationRetryTime = function () {\n    return this.maxOperationRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n    this.maxOperationRetryTime_ = time;\n  };\n\n  return AuthWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(app, unused, url) {\n  return new Service(app, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, // Allow multiple storage instances per app.\n  true);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@firebase/storage/dist/index.esm.js"],"names":["firebase","__awaiter","__generator","__spreadArrays","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","MIN_SAFE_INTEGER","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","getBlob","args","_i","arguments","bb","append","Error","sliceBlob","blob","start","webkitSlice","mozSlice","slice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","hostRegex","httpRegex","httpIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","jsonObjectOrNull","obj","JSON","parse","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","sizeMapping","addRef","authWrapper","generateRef","makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","metadataValidator","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","assign","multipartUpload","genBoundary","str","Math","random","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","asFunctions","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","specs","passed","minArgs","maxArgs","optional","validLength","validator","ArgSpec","self","and_","v1","v2","stringSpec","stringValidator","chainedValidator","uploadDataSpec","metadataSpec","listOptionSpec","nonNegativeNumberSpec","looseObjectSpec","isLooseObjectValidator","isLooseObject","nullFunctionSpec","async","f","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","reject","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","currentSize","metadataRequest","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","splice","finishPromise_","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","newRef","service","put","throwIfRoot_","putString","delete","listAll","accumulator","listAllHelper","opt","nextPage","label","sent","options","op","getDownloadURL","FailRequest","_appDelete","RequestMap","Map","id","addRequest","request","clear","v","AuthWrapper","app","maker","requestMaker","pool","bucket_","deleted_","app_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","INTERNAL","getToken","response","accessToken","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","call","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","doTheRequest","backoffCallback","RequestEndStatus","progressListener","progressEvent","lengthComputable","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","addVersionHeader_","SDK_VERSION","Service","authWrapperBucket","internals_","ServiceInternals","test","refFromURL","STORAGE_TYPE","factory","unused","registerStorage","instance","namespaceExports","Storage","registerService"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(authWrapper, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    var bucket = authWrapper.bucket();\r\n    if (bucket === null) {\r\n        throw noDefaultBucket();\r\n    }\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(authWrapper, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(authWrapper, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(authWrapper) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(authWrapper, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.authWrapper, _this.location);\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.authWrapper, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map = new Map();\r\n        this.id = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     *\r\n     * @param request The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (request) {\r\n        var _this = this;\r\n        var id = this.id;\r\n        this.id++;\r\n        this.map.set(id, request);\r\n        request.getPromise().then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        this.map.forEach(function (v) {\r\n            v && v.cancel(true);\r\n        });\r\n        this.map.clear();\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function () { return null; });\r\n        }\r\n        else {\r\n            return Promise.resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, url) {\r\n    return new Service(app, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}