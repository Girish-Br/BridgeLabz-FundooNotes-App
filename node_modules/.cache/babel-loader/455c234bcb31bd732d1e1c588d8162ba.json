{"ast":null,"code":"var _jsxFileName = \"/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/registration.jsx\";\n\n/******************************************************************************\n *  @Purpose        : to build Registration page for fundooNotes App\n *  @file           : registration.js\n *  @author         : GIRISH B R\n *  @since          : 26-11-2019\n *******************************************************************************/\nimport React from 'react';\nimport { Card, Button, TextField, Snackbar, IconButton } from '@material-ui/core';\nimport { register } from '../controller/userController';\nimport '../App.css';\nimport EventEmitter from 'promise-events';\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = e => {\n      this.setState({\n        snackbarOpen: false\n      });\n    };\n\n    this.handleClick = () => {\n      this.props.history.push('/login');\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      //validation for all the inputs\n      const eventEmitter = new EventEmitter();\n\n      if (this.state.firstName === null || this.state.firstName.length < 1) {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"firstname cannot be empty\"\n        });\n      } else if (this.state.lastName === null || this.state.lastName.length < 1) {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"lastname cannot be empty\"\n        });\n      } else if (this.state.password === null || this.state.password.length < 8) {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"password should be min 8\"\n        });\n      } else if (this.state.email === null || this.state.email.length < 1) {\n        this.setState({\n          snackbarOpen: true,\n          snackbarMsg: \"email cannot be empty\"\n        });\n      } //if the validation is correct we will proceed the details to controller\n      else {\n          eventEmitter.on('validation', emailValidation => {\n            if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.email)) {\n              this.setState({\n                snackbarOpen: true,\n                snackbarMsg: \"invalid email address\"\n              });\n              return 'error';\n            }\n          });\n          eventEmitter.emit('validation').then(result => {\n            if (result[0] !== 'error') {\n              const user = {\n                firstname: this.state.firstName,\n                lastname: this.state.lastName,\n                email: this.state.email,\n                password: this.state.password\n              };\n              register(user).then(res => {\n                if (res === true) {\n                  this.setState({\n                    snackbarMsg: 'Registration Successs' + res,\n                    snackbarOpen: true\n                  });\n                  this.props.history.push(`/login`);\n                } else {\n                  this.setState({\n                    snackbarMsg: res,\n                    snackbarOpen: true\n                  });\n                  this.setState({\n                    email: '',\n                    password: ''\n                  });\n                }\n              });\n            }\n          });\n        }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      snackbarOpen: false,\n      snackbarMsg: ''\n    };\n  } //snackbar will be close at first\n\n\n  //to display\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: this.snackbarClose,\n      message: React.createElement(\"span\", {\n        id: \"messege-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", this.state.snackbarMsg),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"arial-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.snackbarClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"registrationName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"REGISTRATION\")), React.createElement(\"div\", {\n      className: \"rtxtfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"firstName\",\n      fullWidth: true,\n      label: \"FirstName\",\n      type: \"text\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"lastName\",\n      fullWidth: true,\n      label: \"lastName\",\n      type: \"text\",\n      name: \"lastName\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.lastName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"email\",\n      fullWidth: true,\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"off\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      fullWidth: true,\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"rsbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSubmit,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"submit\")), React.createElement(\"div\", {\n      className: \"rlbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Already have an account?  Login\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/registration.jsx"],"names":["React","Card","Button","TextField","Snackbar","IconButton","register","EventEmitter","Register","Component","constructor","props","snackbarClose","e","setState","snackbarOpen","handleClick","history","push","onChange","target","name","value","handleSubmit","eventEmitter","state","firstName","length","snackbarMsg","lastName","password","email","on","emailValidation","test","emit","then","result","user","firstname","lastname","res","render","vertical","horizontal"],"mappings":"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","sourcesContent":["/******************************************************************************\n *  @Purpose        : to build Registration page for fundooNotes App\n *  @file           : registration.js\n *  @author         : GIRISH B R\n *  @since          : 26-11-2019\n *******************************************************************************/\nimport React from 'react';\nimport { Card, Button, TextField, Snackbar, IconButton } from '@material-ui/core';\nimport { register } from '../controller/userController'\nimport '../App.css'\nimport EventEmitter from 'promise-events'\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      snackbarOpen: false,\n      snackbarMsg: '',\n    }\n  }\n  //snackbar will be close at first\n  snackbarClose = (e) => {\n    this.setState({ snackbarOpen: false });\n  }\n//function to handle log in button\n  handleClick = () => {\n    this.props.history.push('/login');\n  }\n  //function to store values\nonChange=(e)=>{\n  this.setState({[e.target.name]:e.target.value})\n}\n//function to handle submit button\nhandleSubmit = () => {\n  //validation for all the inputs\n  const eventEmitter=new EventEmitter()\n  if (this.state.firstName === null || this.state.firstName.length < 1) {\n    this.setState({ snackbarOpen: true, snackbarMsg: \"firstname cannot be empty\" })\n  } else if (this.state.lastName === null || this.state.lastName.length < 1) {\n    this.setState({ snackbarOpen: true, snackbarMsg: \"lastname cannot be empty\" })\n  }\n  else if (this.state.password === null || this.state.password.length < 8) {\n    this.setState({ snackbarOpen: true, snackbarMsg: \"password should be min 8\" })\n  }\n  else if (this.state.email === null || this.state.email.length < 1) {\n    this.setState({ snackbarOpen: true, snackbarMsg: \"email cannot be empty\" })\n  }\n  //if the validation is correct we will proceed the details to controller\n  else {\n        eventEmitter.on('validation',emailValidation=>{\n      if(!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.email)){\n        this.setState({snackbarOpen:true,snackbarMsg:\"invalid email address\"})\n        return 'error';\n      }\n      });\n    eventEmitter.emit('validation').then(result=>{\n      if(result[0]!=='error'){\n        const user = {\n          firstname: this.state.firstName,\n          lastname: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        }\n        register(user)\n          .then(res => {\n            if (res ===true) {\n              this.setState({\n                snackbarMsg: 'Registration Successs' + res,\n                snackbarOpen: true\n              })\n              this.props.history.push(`/login`)\n            }\n            else {\n              this.setState({\n                snackbarMsg: res,\n                snackbarOpen: true\n              })\n              this.setState({\n                email: '',\n                password: ''\n              });\n            }\n          })\n      }\n    })\n  }\n}\n  //to display\n  render() {\n    return (\n      <div className=\"rcard\">\n         <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              open={this.state.snackbarOpen}\n              autoHideDuration={6000}\n              onClose={this.snackbarClose}\n              message={<span id=\"messege-id\"> {this.state.snackbarMsg}</span>}\n              action={[\n                <IconButton\n                  key=\"close\"\n                  arial-label=\"close\"\n                  color='inherit'\n                  onClick={this.snackbarClose}\n                >\n                </IconButton>\n              ]}\n            />\n          <Card >\n              <form >\n            <div className=\"rname\">\n              <p className=\"registrationName\">REGISTRATION</p>\n            </div>\n            <div className=\"rtxtfield\">\n              <TextField\n                id=\"firstName\"\n                fullWidth\n                label=\"FirstName\"\n                type=\"text\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"firstName\"\n                value={this.state.firstName}\n                onChange={this.onChange}\n              />\n              <TextField\n                id=\"lastName\"\n                fullWidth\n                label=\"lastName\"\n                type=\"text\"\n                name=\"lastName\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.lastName}\n                onChange={this.onChange}\n              />\n              <TextField\n                id=\"email\"\n                fullWidth\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"off\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.email}\n                onChange={this.onChange}\n              />\n\n              <TextField\n                id=\"password\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.password}\n                onChange={this.onChange}\n              />\n              </div>\n            <div className=\"rsbutton\">\n              <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">\n                submit\n            </Button>\n            </div>\n            <div className=\"rlbutton\">\n              <a href='/login'>Already have an account?  Login</a>\n            </div>\n            </form>\n          </Card>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}