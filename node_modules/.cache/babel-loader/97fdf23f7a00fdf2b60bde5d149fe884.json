{"ast":null,"code":"var _jsxFileName = \"/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/dashboard/displayItems.jsx\";\nimport React from \"react\";\nimport GetCards from \"./getNote.jsx\";\nimport { GetNote } from \"../../controller/userController\";\n\nclass DisplayNote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllCards = () => {\n      GetNote().then(res => {\n        if (Array.isArray(res)) {\n          this.setState({\n            notes: res\n          });\n        }\n\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      notes: []\n    }; // this.handleSearchBar = this.handleSearchBar.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllCards();\n  }\n\n  render() {\n    let pinnedNotes = [],\n        unpinnedNotes = [],\n        archieveNotes = [],\n        reminderNotes = [];\n    this.state.notes.map(item => {\n      if (item.data().pin === true && item.data().archive === false && item.data().trash === false) {\n        pinnedNotes.push(React.createElement(GetCards, {\n          data: item,\n          displayNotes: this.getAllCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(React.createElement(GetCards, {\n            data: item,\n            displayNotes: this.getAllCards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }));\n        }\n\n        console.log(\"aaaaaaaaa\", pinnedNotes);\n      } else if (item.data().pin === false && item.data().archive === false && item.data().trash === false) {\n        unpinnedNotes.push(React.createElement(GetCards, {\n          data: item,\n          displayNotes: this.getAllCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(React.createElement(GetCards, {\n            data: item,\n            displayNotes: this.getAllCards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }));\n        }\n      } else {\n        archieveNotes.push(React.createElement(GetCards, {\n          data: item,\n          displayNotes: this.getAllCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(React.createElement(GetCards, {\n            data: item,\n            displayNotes: this.getAllCards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }));\n        }\n      }\n    });\n    return !this.props.archiveCards && !this.props.reminderNotes ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"pinned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"PINNED:\")), React.createElement(\"div\", {\n      style: {\n        display: this.props.style.display,\n        width: this.props.style.width\n      },\n      className: \"pinnedCards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, pinnedNotes)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"OTHER NOTES:\")), React.createElement(\"div\", {\n      style: {\n        display: this.props.style.display,\n        width: this.props.style.width\n      },\n      className: \"otherCards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, unpinnedNotes))) : !this.props.archiveCards && this.props.reminderNotes ? React.createElement(\"div\", {\n      style: {\n        display: this.props.style.display,\n        width: this.props.style.width\n      },\n      className: \"pinnedCards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, reminderNotes) : React.createElement(\"div\", {\n      style: {\n        display: this.props.style.display,\n        width: this.props.style.width\n      },\n      className: \"pinnedCards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, archieveNotes);\n  }\n\n}\n\nexport default DisplayNote;","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/dashboard/displayItems.jsx"],"names":["React","GetCards","GetNote","DisplayNote","Component","constructor","props","getAllCards","then","res","Array","isArray","setState","notes","console","log","state","componentDidMount","render","pinnedNotes","unpinnedNotes","archieveNotes","reminderNotes","map","item","data","pin","archive","trash","push","reminder","archiveCards","display","style","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GetCards from \"./getNote.jsx\";\nimport { GetNote } from \"../../controller/userController\";\nclass DisplayNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    // this.handleSearchBar = this.handleSearchBar.bind(this);\n  }\n  componentDidMount() {\n    this.getAllCards();\n  }\n  getAllCards = () => {\n    GetNote().then(res => {\n      if (Array.isArray(res)) {\n        this.setState({ notes: res });\n      }\n      console.log(res);\n    });\n  };\n  render() {\n    let pinnedNotes = [],\n      unpinnedNotes = [],\n      archieveNotes = [],\n      reminderNotes = [];\n    this.state.notes.map(item => {\n      if (item.data().pin === true && item.data().archive === false && item.data().trash===false) {\n        pinnedNotes.push(\n          <GetCards data={item} displayNotes={this.getAllCards} />\n        );\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(\n            <GetCards data={item} displayNotes={this.getAllCards} />\n          );\n        }\n        console.log(\"aaaaaaaaa\", pinnedNotes);\n      } else if (item.data().pin === false && item.data().archive === false && item.data().trash===false) {\n        unpinnedNotes.push(\n          <GetCards data={item} displayNotes={this.getAllCards} />\n        );\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(\n            <GetCards data={item} displayNotes={this.getAllCards} />\n          );\n        }\n      } else {\n        archieveNotes.push(\n          <GetCards data={item} displayNotes={this.getAllCards} />\n        );\n        if (item.data().reminder !== \"\") {\n          reminderNotes.push(\n            <GetCards data={item} displayNotes={this.getAllCards} />\n          );\n        }\n      }\n    });\n     return !this.props.archiveCards && !this.props.reminderNotes ? (\n      <div>\n        <div>\n          <div className>\n            <p className=\"pinned\">PINNED:</p>\n          </div>\n          <div\n            style={{\n              display: this.props.style.display,\n              width: this.props.style.width\n            }}\n            className=\"pinnedCards\"\n          >\n            {pinnedNotes}\n          </div>\n        </div>\n        <div>\n          <div>\n            <p className=\"others\">OTHER NOTES:</p>\n          </div>\n          <div\n            style={{\n              display: this.props.style.display,\n              width: this.props.style.width\n            }}\n            className=\"otherCards\"\n          >\n            {unpinnedNotes}\n          </div>\n        </div>\n      </div>\n    ) :\n    !this.props.archiveCards && this.props.reminderNotes ?\n    <div\n    style={{\n      display: this.props.style.display,\n      width: this.props.style.width\n    }}\n    className=\"pinnedCards\"\n  >\n    {reminderNotes}\n  </div>\n    : (\n      <div\n        style={{\n          display: this.props.style.display,\n          width: this.props.style.width\n        }}\n        className=\"pinnedCards\"\n      >\n        {archieveNotes}\n      </div>\n    );\n  }\n}\nexport default DisplayNote;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}