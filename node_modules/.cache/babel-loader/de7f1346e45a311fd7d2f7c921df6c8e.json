{"ast":null,"code":"var _jsxFileName = \"/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/dashboard/reminder.jsx\";\nimport React from \"react\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport { Card, Snackbar, TextField, Tooltip, CardActions, IconButton, Button, Grid } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Reminder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSetTodayTime = () => {\n      this.handleClosereminder();\n      console.log(new Date());\n      var date = new Date().toDateString();\n      console.log(new Date().toDateString());\n      let reminder1 = date + \", 8:am\";\n      this.setState({\n        reminder: reminder1\n      });\n    };\n\n    this.handleSetTommoTime = () => {\n      this.handleClosereminder();\n      let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n      var date = new Date().toDateString();\n      date = date.replace(new Date().getDate(), new Date().getDate() + 1);\n      console.log(new Date().getDate());\n      date = date.replace(days[new Date().getDay() - 1], days[new Date().getDay()]);\n      console.log(new Date().getDay());\n      let reminder1 = date + \", 8:am\";\n      this.setState({\n        reminder: reminder1\n      });\n    };\n\n    this.handleSetNextWeekTime = () => {\n      this.handleClosereminder();\n      let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n      var date = new Date().toDateString();\n      console.log(new Date());\n      date = date.replace(new Date().getDate().toString(), new Date().getDate() + 7);\n      date = date.replace(days[new Date().getDay() - 1], days[new Date().getDay()]);\n      var reminder1 = date + \", 8:00 AM\";\n      this.setState({\n        reminder: reminder1\n      });\n    };\n\n    this.handleDate = (v, e) => {\n      let date1 = v.toString().slice(3, 15);\n      this.setState({\n        date: date1\n      });\n      console.log(this.state.date);\n    };\n\n    this.handleTime = (v, e) => {\n      let time1 = v.toString().slice(15, 24);\n      this.setState({\n        time: time1\n      });\n      console.log(this.state.time);\n    };\n\n    this.handleSave = () => {\n      this.handleClosereminder();\n      this.setState({\n        reminder: this.state.date + \",\" + this.state.time\n      });\n      this.setState({\n        openReminderMenu: !this.state.openReminderMenu\n      });\n      this.props.handleRef();\n    };\n\n    this.handlereminderClick = e => {\n      this.setState({\n        anchorEl: e.currentTarget\n      });\n    };\n\n    this.setDateOpen = e => {\n      this.setState({\n        openReminderMenu: !this.state.openReminderMenu\n      });\n    };\n\n    this.handleClosereminder = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.state = {\n      reminder: false\n    };\n  }\n\n  render() {\n    let reminderMenuItem = !this.state.openReminderMenu ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      id: \"reminder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClosereminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleClosereminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Reminder :\"), React.createElement(MenuItem, {\n      onClick: this.handleSetTodayTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Later today\"), React.createElement(MenuItem, {\n      onClick: this.handleSetTommoTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Tommorrow\"), React.createElement(MenuItem, {\n      onClick: this.handleSetNextWeekTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Next week\"), React.createElement(MenuItem, {\n      onClick: this.setDateOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Select Date and Time\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      id: \"reminder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClosereminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dateAndReminder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      name: \"date\",\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      value: this.state.date,\n      onChange: (value, event) => this.handleDate(value, event),\n      KeyboardButtonProps: {\n        \"aria-label\": \"change date\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(KeyboardTimePicker, {\n      name: \"time\",\n      margin: \"normal\",\n      id: \"time-picker\",\n      label: this.state.time,\n      value: this.state.time,\n      onChange: (value, event) => this.handleTime(value, event),\n      KeyboardButtonProps: {\n        \"aria-label\": \"change time\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"saveInReminder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSave,\n      style: {\n        backgroundColor: \"silver\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Save\"))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, reminderMenuItem);\n  }\n\n}\n\nexport default Reminder;","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/src/components/dashboard/reminder.jsx"],"names":["React","EventIcon","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","KeyboardTimePicker","Card","Snackbar","TextField","Tooltip","CardActions","IconButton","Button","Grid","Menu","MenuItem","Reminder","Component","constructor","props","handleSetTodayTime","handleClosereminder","console","log","Date","date","toDateString","reminder1","setState","reminder","handleSetTommoTime","days","replace","getDate","getDay","handleSetNextWeekTime","toString","handleDate","v","e","date1","slice","state","handleTime","time1","time","handleSave","openReminderMenu","handleRef","handlereminderClick","anchorEl","currentTarget","setDateOpen","render","reminderMenuItem","Boolean","value","event","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from \"@material-ui/pickers\";\nimport {\n  Card,\n  Snackbar,\n  TextField,\n  Tooltip,\n  CardActions,\n  IconButton,\n  Button,\n  Grid\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nclass Reminder extends React.Component{\n    constructor(props){\n        super(props);\n            this.state={\nreminder:false\n        }\n    }\n    handleSetTodayTime = () => {\n      this.handleClosereminder();\n      console.log(new Date());\n      var date = new Date().toDateString();\n      console.log(new Date().toDateString());\n      let reminder1 = date + \", 8:am\";\n      this.setState({ reminder: reminder1 });\n    };\n    handleSetTommoTime = () => {\n      this.handleClosereminder();\n      let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n      var date = new Date().toDateString();\n      date = date.replace(new Date().getDate(), new Date().getDate() + 1);\n      console.log(new Date().getDate());\n      date = date.replace(\n        days[new Date().getDay() - 1],\n        days[new Date().getDay()]\n      );\n      console.log(new Date().getDay());\n      let reminder1 = date + \", 8:am\";\n      this.setState({ reminder: reminder1 });\n    };\n    handleSetNextWeekTime = () => {\n      this.handleClosereminder();\n      let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n      var date = new Date().toDateString();\n      console.log(new Date());\n      date = date.replace(\n        new Date().getDate().toString(),\n        new Date().getDate() + 7\n      );\n      date = date.replace(\n        days[new Date().getDay() - 1],\n        days[new Date().getDay()]\n      );\n      var reminder1 = date + \", 8:00 AM\";\n      this.setState({ reminder: reminder1 });\n    };\n    handleDate = (v, e) => {\n      let date1 = v.toString().slice(3, 15);\n      this.setState({ date :date1 });\n      console.log(this.state.date);\n    };\n    handleTime = (v,e) => {\n      let time1=v.toString().slice(15,24)\n      this.setState({ time:time1 });\n      console.log(this.state.time)\n    };\n    handleSave = () => {\n      this.handleClosereminder();\n      this.setState({ reminder: this.state.date +\",\"+ this.state.time });\n      this.setState({ openReminderMenu: !this.state.openReminderMenu });\n      this.props.handleRef();\n    };\n    handlereminderClick = e => {\n      this.setState({ anchorEl: e.currentTarget });\n    };\n    setDateOpen = (e)=> {\n      this.setState({ openReminderMenu: !this.state.openReminderMenu });\n    };\n    handleClosereminder = () => {\n      this.setState({ anchorEl: null });\n    };\nrender(){\n  let reminderMenuItem = !this.state.openReminderMenu ? (\n    <div>\n      <Menu\n        id=\"reminder-menu\"\n        anchorEl={this.state.anchorEl}\n        open={Boolean(this.state.anchorEl)}\n        onClose={this.handleClosereminder}\n      >\n        <MenuItem onClick={this.handleClosereminder}>Reminder :</MenuItem>\n        <MenuItem onClick={this.handleSetTodayTime}>Later today</MenuItem>\n        <MenuItem onClick={this.handleSetTommoTime}>Tommorrow</MenuItem>\n        <MenuItem onClick={this.handleSetNextWeekTime}>Next week</MenuItem>\n        <MenuItem onClick={this.setDateOpen}>Select Date and Time</MenuItem>\n      </Menu>\n    </div>\n  ) : (\n    <div>\n      <Menu\n        id=\"reminder-menu\"\n        anchorEl={this.state.anchorEl}\n        open={Boolean(this.state.anchorEl)}\n        onClose={this.handleClosereminder}\n      >\n        <div className=\"dateAndReminder\">\n          <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                name=\"date\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                value={this.state.date}\n                onChange={(value, event) => this.handleDate(value, event)}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n          <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardTimePicker\n                name=\"time\"\n                margin=\"normal\"\n                id=\"time-picker\"\n                label={this.state.time}\n                value={this.state.time}\n                onChange={(value, event) => this.handleTime(value, event)}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change time\"\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n        </div>\n        <div className=\"saveInReminder\">\n          <Button\n            onClick={this.handleSave}\n            style={{ backgroundColor: \"silver\" }}\n          >\n            Save\n          </Button>\n        </div>\n      </Menu>\n    </div> );\n  return <div>{reminderMenuItem}</div>\n     \n}\n}\nexport default Reminder;"]},"metadata":{},"sourceType":"module"}