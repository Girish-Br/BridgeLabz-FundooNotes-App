{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __values, __awaiter, __generator, __spread, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\nvar version = \"0.3.6\";\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = \"w:\" + version;\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n] = 'Missing App configuration value: \"{$valueName}\"', _a[\"not-registered\"\n/* NOT_REGISTERED */\n] = 'Firebase Installation is not registered.', _a[\"installation-not-found\"\n/* INSTALLATION_NOT_FOUND */\n] = 'Firebase Installation not found.', _a[\"request-failed\"\n/* REQUEST_FAILED */\n] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"', _a[\"app-offline\"\n/* APP_OFFLINE */\n] = 'Could not process request. Application offline.', _a[\"delete-pending-registration\"\n/* DELETE_PENDING_REGISTRATION */\n] = \"Can't delete installation while there is a pending registration request.\", _a);\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\n\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\"\n  /* REQUEST_FAILED */\n  );\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  var e_1, _a;\n\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId'];\n\n  try {\n    for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\n      var keyName = configKeys_1_1.value;\n\n      if (!app.options[keyName]) {\n        throw getMissingValueError(keyName);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getInstallationsEndpoint(_a) {\n  var projectId = _a.projectId;\n  return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\n}\n\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2\n    /* COMPLETED */\n    ,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nfunction getErrorFromResponse(requestName, response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var responseJson, errorData;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , response.json()];\n\n        case 1:\n          responseJson = _a.sent();\n          errorData = responseJson.error;\n          return [2\n          /*return*/\n          , ERROR_FACTORY.create(\"request-failed\"\n          /* REQUEST_FAILED */\n          , {\n            requestName: requestName,\n            serverCode: errorData.code,\n            serverMessage: errorData.message,\n            serverStatus: errorData.status\n          })];\n      }\n    });\n  });\n}\n\nfunction getHeaders(_a) {\n  var apiKey = _a.apiKey;\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nfunction getHeadersWithAuth(appConfig, _a) {\n  var refreshToken = _a.refreshToken;\n  var headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\n\n\nfunction retryIfServerError(fn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fn()];\n\n        case 1:\n          result = _a.sent();\n\n          if (result.status >= 500 && result.status < 600) {\n            // Internal Server Error. Retry request.\n            return [2\n            /*return*/\n            , fn()];\n          }\n\n          return [2\n          /*return*/\n          , result];\n      }\n    });\n  });\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken) {\n  return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createInstallation(appConfig, _a) {\n  var fid = _a.fid;\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          endpoint = getInstallationsEndpoint(appConfig);\n          headers = getHeaders(appConfig);\n          body = {\n            fid: fid,\n            authVersion: INTERNAL_AUTH_VERSION,\n            appId: appConfig.appId,\n            sdkVersion: PACKAGE_VERSION\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          return [4\n          /*yield*/\n          , retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n\n        case 1:\n          response = _b.sent();\n          if (!response.ok) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , response.json()];\n\n        case 2:\n          responseValue = _b.sent();\n          registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2\n            /* COMPLETED */\n            ,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n          };\n          return [2\n          /*return*/\n          , registeredInstallationEntry];\n\n        case 3:\n          return [4\n          /*yield*/\n          , getErrorFromResponse('Create Installation', response)];\n\n        case 4:\n          throw _b.sent();\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a promise that resolves after given time passes. */\n\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction bufferToBase64UrlSafe(array) {\n  var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nvar INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\n\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    var fidByteArray = new Uint8Array(17);\n    var crypto_1 = self.crypto || self.msCrypto;\n    crypto_1.getRandomValues(fidByteArray); // Replace the first 4 random bits with the constant FID header of 0b0111.\n\n    fidByteArray[0] = 112 + fidByteArray[0] % 16;\n    var fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\n\n\nfunction encode(fidByteArray) {\n  var b64String = bufferToBase64UrlSafe(fidByteArray); // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n\n  return b64String.substr(0, 22);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DATABASE_NAME = 'firebase-installations-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction set(appConfig, value) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4\n          /*yield*/\n          , getDbPromise()];\n\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          return [4\n          /*yield*/\n          , tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\n\n        case 2:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , tx.complete];\n\n        case 3:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , value];\n      }\n    });\n  });\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction remove(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4\n          /*yield*/\n          , getDbPromise()];\n\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          return [4\n          /*yield*/\n          , tx.objectStore(OBJECT_STORE_NAME).delete(key)];\n\n        case 2:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , tx.complete];\n\n        case 3:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\n\n\nfunction update(appConfig, updateFn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx, store, oldValue, newValue;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4\n          /*yield*/\n          , getDbPromise()];\n\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          store = tx.objectStore(OBJECT_STORE_NAME);\n          return [4\n          /*yield*/\n          , store.get(key)];\n\n        case 2:\n          oldValue = _a.sent();\n          newValue = updateFn(oldValue);\n          if (!(newValue === undefined)) return [3\n          /*break*/\n          , 4];\n          return [4\n          /*yield*/\n          , store.delete(key)];\n\n        case 3:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 4:\n          return [4\n          /*yield*/\n          , store.put(newValue, key)];\n\n        case 5:\n          _a.sent();\n\n          _a.label = 6;\n\n        case 6:\n          return [4\n          /*yield*/\n          , tx.complete];\n\n        case 7:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , newValue];\n      }\n    });\n  });\n}\n\nfunction getKey(appConfig) {\n  return appConfig.appName + \"!\" + appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\n\n\nfunction getInstallationEntry(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registrationPromise, installationEntry, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , update(appConfig, function (oldEntry) {\n            var installationEntry = updateOrCreateInstallationEntry(oldEntry);\n            var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\n            registrationPromise = entryWithPromise.registrationPromise;\n            return entryWithPromise.installationEntry;\n          })];\n\n        case 1:\n          installationEntry = _b.sent();\n          if (!(installationEntry.fid === INVALID_FID)) return [3\n          /*break*/\n          , 3];\n          _a = {};\n          return [4\n          /*yield*/\n          , registrationPromise];\n\n        case 2:\n          // FID generation failed. Waiting for the FID from the server.\n          return [2\n          /*return*/\n          , (_a.installationEntry = _b.sent(), _a)];\n\n        case 3:\n          return [2\n          /*return*/\n          , {\n            installationEntry: installationEntry,\n            registrationPromise: registrationPromise\n          }];\n      }\n    });\n  });\n}\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\n\n\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  var entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0\n    /* NOT_STARTED */\n\n  };\n  return clearTimedOutRequest(entry);\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\n\n\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\n  if (installationEntry.registrationStatus === 0\n  /* NOT_STARTED */\n  ) {\n      if (!navigator.onLine) {\n        // Registration required but app is offline.\n        var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\"\n        /* APP_OFFLINE */\n        ));\n        return {\n          installationEntry: installationEntry,\n          registrationPromise: registrationPromiseWithError\n        };\n      } // Try registering. Change status to IN_PROGRESS.\n\n\n      var inProgressEntry = {\n        fid: installationEntry.fid,\n        registrationStatus: 1\n        /* IN_PROGRESS */\n        ,\n        registrationTime: Date.now()\n      };\n      var registrationPromise = registerInstallation(appConfig, inProgressEntry);\n      return {\n        installationEntry: inProgressEntry,\n        registrationPromise: registrationPromise\n      };\n    } else if (installationEntry.registrationStatus === 1\n  /* IN_PROGRESS */\n  ) {\n      return {\n        installationEntry: installationEntry,\n        registrationPromise: waitUntilFidRegistration(appConfig)\n      };\n    } else {\n    return {\n      installationEntry: installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\n\n\nfunction registerInstallation(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registeredInstallationEntry, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 7]);\n\n          return [4\n          /*yield*/\n          , createInstallation(appConfig, installationEntry)];\n\n        case 1:\n          registeredInstallationEntry = _a.sent();\n          return [2\n          /*return*/\n          , set(appConfig, registeredInstallationEntry)];\n\n        case 2:\n          e_1 = _a.sent();\n          if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3\n          /*break*/\n          , 4]; // Server returned a \"FID can not be used\" error.\n          // Generate a new ID next time.\n\n          return [4\n          /*yield*/\n          , remove(appConfig)];\n\n        case 3:\n          // Server returned a \"FID can not be used\" error.\n          // Generate a new ID next time.\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 4:\n          // Registration failed. Set FID as not registered.\n          return [4\n          /*yield*/\n          , set(appConfig, {\n            fid: installationEntry.fid,\n            registrationStatus: 0\n            /* NOT_STARTED */\n\n          })];\n\n        case 5:\n          // Registration failed. Set FID as not registered.\n          _a.sent();\n\n          _a.label = 6;\n\n        case 6:\n          throw e_1;\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/** Call if FID registration is pending in another request. */\n\n\nfunction waitUntilFidRegistration(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var entry, _a, installationEntry, registrationPromise;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , updateInstallationRequest(appConfig)];\n\n        case 1:\n          entry = _b.sent();\n          _b.label = 2;\n\n        case 2:\n          if (!(entry.registrationStatus === 1\n          /* IN_PROGRESS */\n          )) return [3\n            /*break*/\n            , 5]; // createInstallation request still in progress.\n\n          return [4\n          /*yield*/\n          , sleep(100)];\n\n        case 3:\n          // createInstallation request still in progress.\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , updateInstallationRequest(appConfig)];\n\n        case 4:\n          entry = _b.sent();\n          return [3\n          /*break*/\n          , 2];\n\n        case 5:\n          if (!(entry.registrationStatus === 0\n          /* NOT_STARTED */\n          )) return [3\n            /*break*/\n            , 7];\n          return [4\n          /*yield*/\n          , getInstallationEntry(appConfig)];\n\n        case 6:\n          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n\n          if (registrationPromise) {\n            return [2\n            /*return*/\n            , registrationPromise];\n          } else {\n            // if there is no registrationPromise, entry is registered.\n            return [2\n            /*return*/\n            , installationEntry];\n          }\n\n        case 7:\n          return [2\n          /*return*/\n          , entry];\n      }\n    });\n  });\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\n\n\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(\"installation-not-found\"\n      /* INSTALLATION_NOT_FOUND */\n      );\n    }\n\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0\n      /* NOT_STARTED */\n\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1\n  /* IN_PROGRESS */\n  && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction generateAuthToken(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, body, request, response, responseValue, completedAuthToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry);\n          body = {\n            installation: {\n              sdkVersion: PACKAGE_VERSION\n            }\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          return [4\n          /*yield*/\n          , retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n\n        case 1:\n          response = _a.sent();\n          if (!response.ok) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , response.json()];\n\n        case 2:\n          responseValue = _a.sent();\n          completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n          return [2\n          /*return*/\n          , completedAuthToken];\n\n        case 3:\n          return [4\n          /*yield*/\n          , getErrorFromResponse('Generate Auth Token', response)];\n\n        case 4:\n          throw _a.sent();\n      }\n    });\n  });\n}\n\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\n  var fid = _a.fid;\n  return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\n\n\nfunction refreshAuthToken(appConfig, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var tokenPromise, entry, authToken, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , update(appConfig, function (oldEntry) {\n            if (!isEntryRegistered(oldEntry)) {\n              throw ERROR_FACTORY.create(\"not-registered\"\n              /* NOT_REGISTERED */\n              );\n            }\n\n            var oldAuthToken = oldEntry.authToken;\n\n            if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n              // There is a valid token in the DB.\n              return oldEntry;\n            } else if (oldAuthToken.requestStatus === 1\n            /* IN_PROGRESS */\n            ) {\n                // There already is a token request in progress.\n                tokenPromise = waitUntilAuthTokenRequest(appConfig, forceRefresh);\n                return oldEntry;\n              } else {\n              // No token or token expired.\n              if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\"\n                /* APP_OFFLINE */\n                );\n              }\n\n              var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n              tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n              return inProgressEntry;\n            }\n          })];\n\n        case 1:\n          entry = _b.sent();\n          if (!tokenPromise) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , tokenPromise];\n\n        case 2:\n          _a = _b.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          _a = entry.authToken;\n          _b.label = 4;\n\n        case 4:\n          authToken = _a;\n          return [2\n          /*return*/\n          , authToken];\n      }\n    });\n  });\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n */\n\n\nfunction waitUntilAuthTokenRequest(appConfig, forceRefresh) {\n  return __awaiter(this, void 0, void 0, function () {\n    var entry, authToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , updateAuthTokenRequest(appConfig)];\n\n        case 1:\n          entry = _a.sent();\n          _a.label = 2;\n\n        case 2:\n          if (!(entry.authToken.requestStatus === 1\n          /* IN_PROGRESS */\n          )) return [3\n            /*break*/\n            , 5]; // generateAuthToken still in progress.\n\n          return [4\n          /*yield*/\n          , sleep(100)];\n\n        case 3:\n          // generateAuthToken still in progress.\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , updateAuthTokenRequest(appConfig)];\n\n        case 4:\n          entry = _a.sent();\n          return [3\n          /*break*/\n          , 2];\n\n        case 5:\n          authToken = entry.authToken;\n\n          if (authToken.requestStatus === 0\n          /* NOT_STARTED */\n          ) {\n              // The request timed out or failed in a different call. Try again.\n              return [2\n              /*return*/\n              , refreshAuthToken(appConfig, forceRefresh)];\n            } else {\n            return [2\n            /*return*/\n            , authToken];\n          }\n\n      }\n    });\n  });\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\n\n\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\"\n      /* NOT_REGISTERED */\n      );\n    }\n\n    var oldAuthToken = oldEntry.authToken;\n\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return __assign(__assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0\n          /* NOT_STARTED */\n\n        }\n      });\n    }\n\n    return oldEntry;\n  });\n}\n\nfunction fetchAuthTokenFromServer(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 8]);\n\n          return [4\n          /*yield*/\n          , generateAuthToken(appConfig, installationEntry)];\n\n        case 1:\n          authToken = _a.sent();\n          updatedInstallationEntry = __assign(__assign({}, installationEntry), {\n            authToken: authToken\n          });\n          return [4\n          /*yield*/\n          , set(appConfig, updatedInstallationEntry)];\n\n        case 2:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , authToken];\n\n        case 3:\n          e_1 = _a.sent();\n          if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3\n          /*break*/\n          , 5]; // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n          // Generate a new ID next time.\n\n          return [4\n          /*yield*/\n          , remove(appConfig)];\n\n        case 4:\n          // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n          // Generate a new ID next time.\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          updatedInstallationEntry = __assign(__assign({}, installationEntry), {\n            authToken: {\n              requestStatus: 0\n              /* NOT_STARTED */\n\n            }\n          });\n          return [4\n          /*yield*/\n          , set(appConfig, updatedInstallationEntry)];\n\n        case 6:\n          _a.sent();\n\n          _a.label = 7;\n\n        case 7:\n          throw e_1;\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2\n  /* COMPLETED */\n  ;\n}\n\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2\n  /* COMPLETED */\n  && !isAuthTokenExpired(authToken);\n}\n\nfunction isAuthTokenExpired(authToken) {\n  var now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\n\n\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  var inProgressAuthToken = {\n    requestStatus: 1\n    /* IN_PROGRESS */\n    ,\n    requestTime: Date.now()\n  };\n  return __assign(__assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1\n  /* IN_PROGRESS */\n  && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getId(app) {\n  return __awaiter(this, void 0, void 0, function () {\n    var appConfig, _a, installationEntry, registrationPromise;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          appConfig = extractAppConfig(app);\n          return [4\n          /*yield*/\n          , getInstallationEntry(appConfig)];\n\n        case 1:\n          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n\n          if (registrationPromise) {\n            registrationPromise.catch(console.error);\n          } else {\n            // If the installation is already registered, update the authentication\n            // token if needed.\n            refreshAuthToken(appConfig).catch(console.error);\n          }\n\n          return [2\n          /*return*/\n          , installationEntry.fid];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getToken(app, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var appConfig, authToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          appConfig = extractAppConfig(app);\n          return [4\n          /*yield*/\n          , completeInstallationRegistration(appConfig)];\n\n        case 1:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , refreshAuthToken(appConfig, forceRefresh)];\n\n        case 2:\n          authToken = _a.sent();\n          return [2\n          /*return*/\n          , authToken.token];\n      }\n    });\n  });\n}\n\nfunction completeInstallationRegistration(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registrationPromise;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getInstallationEntry(appConfig)];\n\n        case 1:\n          registrationPromise = _a.sent().registrationPromise;\n          if (!registrationPromise) return [3\n          /*break*/\n          , 3]; // A createInstallation request is in progress. Wait until it finishes.\n\n          return [4\n          /*yield*/\n          , registrationPromise];\n\n        case 2:\n          // A createInstallation request is in progress. Wait until it finishes.\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction deleteInstallation(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, request, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          endpoint = getDeleteEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry);\n          request = {\n            method: 'DELETE',\n            headers: headers\n          };\n          return [4\n          /*yield*/\n          , retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n\n        case 1:\n          response = _a.sent();\n          if (!!response.ok) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , getErrorFromResponse('Delete Installation', response)];\n\n        case 2:\n          throw _a.sent();\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction getDeleteEndpoint(appConfig, _a) {\n  var fid = _a.fid;\n  return getInstallationsEndpoint(appConfig) + \"/\" + fid;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction deleteInstallation$1(app) {\n  return __awaiter(this, void 0, void 0, function () {\n    var appConfig, entry;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          appConfig = extractAppConfig(app);\n          return [4\n          /*yield*/\n          , update(appConfig, function (oldEntry) {\n            if (oldEntry && oldEntry.registrationStatus === 0\n            /* NOT_STARTED */\n            ) {\n                // Delete the unregistered entry without sending a deleteInstallation request.\n                return undefined;\n              }\n\n            return oldEntry;\n          })];\n\n        case 1:\n          entry = _a.sent();\n          if (!entry) return [3\n          /*break*/\n          , 6];\n          if (!(entry.registrationStatus === 1\n          /* IN_PROGRESS */\n          )) return [3\n            /*break*/\n            , 2]; // Can't delete while trying to register.\n\n          throw ERROR_FACTORY.create(\"delete-pending-registration\"\n          /* DELETE_PENDING_REGISTRATION */\n          );\n\n        case 2:\n          if (!(entry.registrationStatus === 2\n          /* COMPLETED */\n          )) return [3\n            /*break*/\n            , 6];\n          if (!!navigator.onLine) return [3\n          /*break*/\n          , 3];\n          throw ERROR_FACTORY.create(\"app-offline\"\n          /* APP_OFFLINE */\n          );\n\n        case 3:\n          return [4\n          /*yield*/\n          , deleteInstallation(appConfig, entry)];\n\n        case 4:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , remove(appConfig)];\n\n        case 5:\n          _a.sent();\n\n          _a.label = 6;\n\n        case 6:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerInstallations(instance) {\n  var installationsName = 'installations';\n\n  var factoryMethod = function (app) {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n    return {\n      app: app,\n      getId: function () {\n        return getId(app);\n      },\n      getToken: function (forceRefresh) {\n        return getToken(app, forceRefresh);\n      },\n      delete: function () {\n        return deleteInstallation$1(app);\n      }\n    };\n  };\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\n\nregisterInstallations(firebase);\nexport { registerInstallations };","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@firebase/installations/dist/index.esm.js"],"names":["firebase","__values","__awaiter","__generator","__spread","__assign","ErrorFactory","FirebaseError","openDb","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","_a","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","error","code","includes","extractAppConfig","app","e_1","options","getMissingValueError","name","configKeys","configKeys_1","configKeys_1_1","next","done","keyName","value","e_1_1","return","call","appName","projectId","apiKey","appId","valueName","create","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","requestName","responseJson","errorData","label","json","sent","serverCode","serverMessage","message","serverStatus","status","getHeaders","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","result","responseExpiresIn","Number","replace","createInstallation","fid","endpoint","body","request","responseValue","registeredInstallationEntry","_b","authVersion","sdkVersion","method","JSON","stringify","fetch","ok","registrationStatus","authToken","sleep","ms","Promise","resolve","setTimeout","bufferToBase64UrlSafe","array","b64","btoa","String","fromCharCode","apply","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","crypto_1","self","crypto","msCrypto","getRandomValues","encode","test","b64String","substr","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","oldVersion","createObjectStore","set","key","db","tx","getKey","transaction","objectStore","put","complete","remove","delete","update","updateFn","store","oldValue","newValue","get","undefined","getInstallationEntry","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","clearTimedOutRequest","navigator","onLine","registrationPromiseWithError","reject","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","trys","push","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthToken","completedAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","requestTime","getId","catch","console","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","deleteInstallation$1","registerInstallations","instance","installationsName","factoryMethod","INTERNAL","registerService"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __values, __awaiter, __generator, __spread, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar version = \"0.3.6\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallation(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallation(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthToken(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _a.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _a.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(appConfig, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(appConfig, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n */\r\nfunction waitUntilAuthTokenRequest(appConfig, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(appConfig, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthToken(appConfig, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(appConfig).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(app, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, completeInstallationRegistration(appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(appConfig, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation$1(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallation(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    var factoryMethod = function (app) {\r\n        // Throws if app isn't configured properly.\r\n        extractAppConfig(app);\r\n        return {\r\n            app: app,\r\n            getId: function () { return getId(app); },\r\n            getToken: function (forceRefresh) { return getToken(app, forceRefresh); },\r\n            delete: function () { return deleteInstallation$1(app); }\r\n        };\r\n    };\r\n    instance.INTERNAL.registerService(installationsName, factoryMethod);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}