{"ast":null,"code":"import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\nvar MuiPickersContext = createContext(null);\n\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n      children = _ref.children,\n      locale = _ref.locale,\n      libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\n\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\n\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\n\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@material-ui/pickers/esm/useUtils-cfb96ac9.js"],"names":["createContext","useMemo","createElement","useContext","func","oneOfType","object","string","element","arrayOf","MuiPickersContext","MuiPickersUtilsProvider","_ref","Utils","utils","children","locale","libInstance","instance","Provider","value","process","env","NODE_ENV","propTypes","isRequired","checkUtils","Error","useUtils","M","a","u"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,aAAjC,EAAgDC,UAAhD,QAAkE,OAAlE;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmDC,OAAnD,QAAkE,YAAlE;AAEA,IAAIC,iBAAiB,GAAGV,aAAa,CAAC,IAAD,CAArC;;AACA,IAAIW,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,IAAjC,EAAuC;AACnE,MAAIC,KAAK,GAAGD,IAAI,CAACE,KAAjB;AAAA,MACIC,QAAQ,GAAGH,IAAI,CAACG,QADpB;AAAA,MAEIC,MAAM,GAAGJ,IAAI,CAACI,MAFlB;AAAA,MAGIC,WAAW,GAAGL,IAAI,CAACK,WAHvB;AAIA,MAAIH,KAAK,GAAGb,OAAO,CAAC,YAAY;AAC9B,WAAO,IAAIY,KAAJ,CAAU;AACfG,MAAAA,MAAM,EAAEA,MADO;AAEfE,MAAAA,QAAQ,EAAED;AAFK,KAAV,CAAP;AAID,GALkB,EAKhB,CAACJ,KAAD,EAAQI,WAAR,EAAqBD,MAArB,CALgB,CAAnB;AAMA,SAAOd,aAAa,CAACQ,iBAAiB,CAACS,QAAnB,EAA6B;AAC/CC,IAAAA,KAAK,EAAEN,KADwC;AAE/CC,IAAAA,QAAQ,EAAEA;AAFqC,GAA7B,CAApB;AAID,CAfD;;AAgBAM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,uBAAuB,CAACa,SAAxB,GAAoC;AAC1EV,EAAAA,KAAK,EAAEV,IAAI,CAACqB,UAD8D;AAE1ET,EAAAA,MAAM,EAAEX,SAAS,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CAFyD;AAG1EQ,EAAAA,QAAQ,EAAEV,SAAS,CAAC,CAACG,OAAO,CAACiB,UAAT,EAAqBhB,OAAO,CAACD,OAAO,CAACiB,UAAT,CAA5B,CAAD,CAAT,CAA6DA;AAHG,CAA5E,GAII,KAAK,CAJT;;AAMA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBZ,KAApB,EAA2B;AAC1C,MAAI,CAACA,KAAL,EAAY;AACV;AACA,UAAM,IAAIa,KAAJ,CAAU,kNAAV,CAAN;AACD;AACF,CALD;;AAMA,SAASC,QAAT,GAAoB;AAClB,MAAId,KAAK,GAAGX,UAAU,CAACO,iBAAD,CAAtB;AACAgB,EAAAA,UAAU,CAACZ,KAAD,CAAV;AACA,SAAOA,KAAP;AACD;;AAED,SAASH,uBAAuB,IAAIkB,CAApC,EAAuCnB,iBAAiB,IAAIoB,CAA5D,EAA+DF,QAAQ,IAAIG,CAA3E","sourcesContent":["import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\n\nvar MuiPickersContext = createContext(null);\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n      children = _ref.children,\n      locale = _ref.locale,\n      libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\n\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\n\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };\n//# sourceMappingURL=useUtils-cfb96ac9.js.map\n"]},"metadata":{},"sourceType":"module"}