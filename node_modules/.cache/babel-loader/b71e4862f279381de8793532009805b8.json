{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar tslib = require('tslib');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\n\n\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\n\nvar HttpsErrorImpl =\n/** @class */\nfunction (_super) {\n  tslib.__extends(HttpsErrorImpl, _super);\n\n  function HttpsErrorImpl(code, message, details) {\n    var _this = _super.call(this, message) || this; // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n\n    Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\n    _this.code = code;\n    _this.details = details;\n    return _this;\n  }\n\n  return HttpsErrorImpl;\n}(Error);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\n\n\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n\n    case 400:\n      return 'invalid-argument';\n\n    case 401:\n      return 'unauthenticated';\n\n    case 403:\n      return 'permission-denied';\n\n    case 404:\n      return 'not-found';\n\n    case 409:\n      return 'aborted';\n\n    case 429:\n      return 'resource-exhausted';\n\n    case 499:\n      return 'cancelled';\n\n    case 500:\n      return 'internal';\n\n    case 501:\n      return 'unimplemented';\n\n    case 503:\n      return 'unavailable';\n\n    case 504:\n      return 'deadline-exceeded';\n  }\n\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\n\n\nfunction _errorForResponse(status, bodyJSON, serializer) {\n  var code = codeForHTTPStatus(status); // Start with reasonable defaults from the status code.\n\n  var description = code;\n  var details = undefined; // Then look through the body for explicit details.\n\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n\n    if (errorJSON) {\n      var status_1 = errorJSON.status;\n\n      if (typeof status_1 === 'string') {\n        if (!errorCodeMap[status_1]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n\n        code = errorCodeMap[status_1]; // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n\n        description = status_1;\n      }\n\n      var message = errorJSON.message;\n\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {// If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\n\n\nvar ContextProvider =\n/** @class */\nfunction () {\n  function ContextProvider(app) {\n    this.app = app;\n  }\n\n  ContextProvider.prototype.getAuthToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var token, e_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.app.INTERNAL.getToken()];\n\n          case 1:\n            token = _a.sent();\n\n            if (!token) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [2\n            /*return*/\n            , token.accessToken];\n\n          case 2:\n            e_1 = _a.sent(); // If there's any error when trying to get the auth token, leave it off.\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getInstanceIdToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var messaging, token, e_2;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]); // HACK: Until we have a separate instanceId package, this is a quick way\n            // to load in the messaging instance for this app.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n            if (!this.app.messaging) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            messaging = this.app.messaging();\n            return [4\n            /*yield*/\n            , messaging.getToken()];\n\n          case 1:\n            token = _a.sent();\n\n            if (!token) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [2\n            /*return*/\n            , token];\n\n          case 2:\n            e_2 = _a.sent(); // We don't warn on this, because it usually means messaging isn't set up.\n            // console.warn('Failed to retrieve instance id token.', e);\n            // If there's any error when trying to get the token, leave it off.\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getContext = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var authToken, instanceIdToken;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAuthToken()];\n\n          case 1:\n            authToken = _a.sent();\n            return [4\n            /*yield*/\n            , this.getInstanceIdToken()];\n\n          case 2:\n            instanceIdToken = _a.sent();\n            return [2\n            /*return*/\n            , {\n              authToken: authToken,\n              instanceIdToken: instanceIdToken\n            }];\n        }\n      });\n    });\n  };\n\n  return ContextProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues( // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n\n  return result;\n}\n\nvar Serializer =\n/** @class */\nfunction () {\n  function Serializer() {} // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n\n\n  Serializer.prototype.encode = function (data) {\n    var _this = this;\n\n    if (data == null) {\n      return null;\n    }\n\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n\n    if (data === true || data === false) {\n      return data;\n    }\n\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(function (x) {\n        return _this.encode(x);\n      });\n    }\n\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, function (x) {\n        return _this.encode(x);\n      });\n    } // If we got this far, the data is not encodable.\n\n\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }; // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n\n\n  Serializer.prototype.decode = function (json) {\n    var _this = this;\n\n    if (json == null) {\n      return json;\n    }\n\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE: // Fall through and handle this the same as unsigned.\n\n        case UNSIGNED_LONG_TYPE:\n          {\n            // Technically, this could work return a valid number for malformed\n            // data if there was a number followed by garbage. But it's just not\n            // worth all the extra code to detect that case.\n            var value = Number(json['value']);\n\n            if (isNaN(value)) {\n              throw new Error('Data cannot be decoded from JSON: ' + json);\n            }\n\n            return value;\n          }\n\n        default:\n          {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n      }\n    }\n\n    if (Array.isArray(json)) {\n      return json.map(function (x) {\n        return _this.decode(x);\n      });\n    }\n\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, function (x) {\n        return _this.decode(x);\n      });\n    } // Anything else is safe to return.\n\n\n    return json;\n  };\n\n  return Serializer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\n\n\nfunction failAfter(millis) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Functions service for the given app and (optional) region.\r\n   * @param app_ The FirebaseApp to use.\r\n   * @param region_ The region to call functions in.\r\n   */\n  function Service(app_, region_) {\n    var _this = this;\n\n    if (region_ === void 0) {\n      region_ = 'us-central1';\n    }\n\n    this.app_ = app_;\n    this.region_ = region_;\n    this.serializer = new Serializer();\n    this.emulatorOrigin = null;\n    this.INTERNAL = {\n      delete: function () {\n        return _this.deleteService();\n      }\n    };\n    this.contextProvider = new ContextProvider(app_); // Cancels all ongoing requests when resolved.\n\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this.deleteService = function () {\n        return resolve();\n      };\n    });\n  }\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the URL for a callable with the given name.\r\n   * @param name The name of the callable.\r\n   */\n\n  Service.prototype._url = function (name) {\n    var projectId = this.app_.options.projectId;\n    var region = this.region_;\n\n    if (this.emulatorOrigin !== null) {\n      var origin_1 = this.emulatorOrigin;\n      return origin_1 + \"/\" + projectId + \"/\" + region + \"/\" + name;\n    }\n\n    return \"https://\" + region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\n  };\n  /**\r\n   * Changes this instance to point to a Cloud Functions emulator running\r\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n   *\r\n   * @param origin The origin of the local emulator, such as\r\n   * \"http://localhost:5005\".\r\n   */\n\n\n  Service.prototype.useFunctionsEmulator = function (origin) {\n    this.emulatorOrigin = origin;\n  };\n  /**\r\n   * Returns a reference to the callable https trigger with the given name.\r\n   * @param name The name of the trigger.\r\n   */\n\n\n  Service.prototype.httpsCallable = function (name, options) {\n    var _this = this;\n\n    return function (data) {\n      return _this.call(name, data, options || {});\n    };\n  };\n  /**\r\n   * Does an HTTP POST and returns the completed response.\r\n   * @param url The url to post to.\r\n   * @param body The JSON body of the post.\r\n   * @param headers The HTTP headers to include in the request.\r\n   * @return A Promise that will succeed when the request finishes.\r\n   */\n\n\n  Service.prototype.postJSON = function (url, body, headers) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var response, e_1, json, e_2;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers.append('Content-Type', 'application/json');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , fetch(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            })];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent(); // This could be an unhandled error on the backend, or it could be a\n            // network error. There's no way to know, since an unhandled error on the\n            // backend will fail to set the proper CORS header, and thus will be\n            // treated as a network error by fetch.\n\n            return [2\n            /*return*/\n            , {\n              status: 0,\n              json: null\n            }];\n\n          case 4:\n            json = null;\n            _a.label = 5;\n\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 6:\n            json = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            e_2 = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            return [2\n            /*return*/\n            , {\n              status: response.status,\n              json: json\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Calls a callable function asynchronously and returns the result.\r\n   * @param name The name of the callable trigger.\r\n   * @param data The data to pass as params to the function.s\r\n   */\n\n\n  Service.prototype.call = function (name, data, options) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var url, body, headers, context, timeout, response, error, responseData, decodedData;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            url = this._url(name); // Encode any special types, such as dates, in the input data.\n\n            data = this.serializer.encode(data);\n            body = {\n              data: data\n            };\n            headers = new Headers();\n            return [4\n            /*yield*/\n            , this.contextProvider.getContext()];\n\n          case 1:\n            context = _a.sent();\n\n            if (context.authToken) {\n              headers.append('Authorization', 'Bearer ' + context.authToken);\n            }\n\n            if (context.instanceIdToken) {\n              headers.append('Firebase-Instance-ID-Token', context.instanceIdToken);\n            }\n\n            timeout = options.timeout || 70000;\n            return [4\n            /*yield*/\n            , Promise.race([this.postJSON(url, body, headers), failAfter(timeout), this.cancelAllRequests])];\n\n          case 2:\n            response = _a.sent(); // If service was deleted, interrupted response throws an error.\n\n            if (!response) {\n              throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\n            }\n\n            error = _errorForResponse(response.status, response.json, this.serializer);\n\n            if (error) {\n              throw error;\n            }\n\n            if (!response.json) {\n              throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\n            }\n\n            responseData = response.json.data; // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n\n            if (typeof responseData === 'undefined') {\n              // Consider the response malformed.\n              throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n            }\n\n            decodedData = this.serializer.decode(responseData);\n            return [2\n            /*return*/\n            , {\n              data: decodedData\n            }];\n        }\n      });\n    });\n  };\n\n  return Service;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Functions.\r\n */\n\n\nvar FUNCTIONS_TYPE = 'functions';\n\nfunction factory(app, _unused, region) {\n  return new Service(app, region);\n}\n\nfunction registerFunctions(instance) {\n  var namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n  instance.INTERNAL.registerService(FUNCTIONS_TYPE, factory, namespaceExports, // We don't need to wait on any AppHooks.\n  undefined, // Allow multiple functions instances per app.\n  true);\n}\n\nregisterFunctions(firebase);\nexports.registerFunctions = registerFunctions;","map":{"version":3,"sources":["/home/admin-pc/Girish/BridgeLabz-FundooNotes-App/node_modules/@firebase/functions/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","firebase","require","tslib","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","HttpsErrorImpl","_super","__extends","code","message","details","_this","call","setPrototypeOf","prototype","Error","codeForHTTPStatus","status","_errorForResponse","bodyJSON","serializer","description","undefined","errorJSON","error","status_1","decode","e","ContextProvider","app","getAuthToken","__awaiter","token","e_1","__generator","_a","label","trys","push","getToken","sent","accessToken","getInstanceIdToken","messaging","e_2","getContext","authToken","instanceIdToken","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Array","isArray","map","x","json","isNaN","failAfter","millis","Promise","_","reject","setTimeout","Service","app_","region_","emulatorOrigin","delete","deleteService","contextProvider","cancelAllRequests","resolve","get","enumerable","configurable","_url","name","projectId","options","region","origin_1","useFunctionsEmulator","origin","httpsCallable","postJSON","url","body","headers","response","append","fetch","method","JSON","stringify","context","timeout","responseData","decodedData","Headers","race","FUNCTIONS_TYPE","factory","_unused","registerFunctions","instance","namespaceExports","Functions","registerService"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    tslib.__extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(app) {\r\n        this.app = app;\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.app.INTERNAL.getToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var messaging, token, e_2;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        // HACK: Until we have a separate instanceId package, this is a quick way\r\n                        // to load in the messaging instance for this app.\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        if (!this.app.messaging) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        messaging = this.app.messaging();\r\n                        return [4 /*yield*/, messaging.getToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token];\r\n                    case 2:\r\n                        e_2 = _a.sent();\r\n                        // We don't warn on this, because it usually means messaging isn't set up.\r\n                        // console.warn('Failed to retrieve instance id token.', e);\r\n                        // If there's any error when trying to get the token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    return new Promise(function (_, reject) {\r\n        setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param region_ The region to call functions in.\r\n     */\r\n    function Service(app_, region_) {\r\n        var _this = this;\r\n        if (region_ === void 0) { region_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.region_ = region_;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return _this.deleteService();\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(app_);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        var region = this.region_;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + region + \"/\" + name;\r\n        }\r\n        return \"https://\" + region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers.append('Content-Type', 'application/json');\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, response, error, responseData, decodedData;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = new Headers();\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _a.sent();\r\n                        if (context.authToken) {\r\n                            headers.append('Authorization', 'Bearer ' + context.authToken);\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers.append('Firebase-Instance-ID-Token', context.instanceIdToken);\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                this.postJSON(url, body, headers),\r\n                                failAfter(timeout),\r\n                                this.cancelAllRequests\r\n                            ])];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction factory(app, _unused, region) {\r\n    return new Service(app, region);\r\n}\r\nfunction registerFunctions(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    instance.INTERNAL.registerService(FUNCTIONS_TYPE, factory, namespaceExports, \r\n    // We don't need to wait on any AppHooks.\r\n    undefined, \r\n    // Allow multiple functions instances per app.\r\n    true);\r\n}\r\nregisterFunctions(firebase);\n\nexports.registerFunctions = registerFunctions;\n//# sourceMappingURL=index.cjs.js.map\n"]},"metadata":{},"sourceType":"script"}